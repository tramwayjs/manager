{"version":3,"sources":["App.js","config/parameters/global/routes.js","components/buttons/AppToggle/AppToggle.js","components/buttons/AppToggle/index.js","components/modals/ClosableModal/ClosableModal.js","components/modals/ClosableModal/index.js","components/buttons/CreateItem/index.js","components/buttons/CreateItem/CreateItem.js","components/layout/Menu/index.js","components/layout/Menu/Menu.js","components/layout/Sidebar/index.js","components/layout/Sidebar/Sidebar.js","components/layout/Page/index.js","components/layout/Page/Page.js","components/pages/Dashboard/index.js","components/pages/Dashboard/Dashboard.js","components/lists/InstalledLibraries/index.js","components/lists/InstalledLibraries/InstalledLibraries.js","components/lists/Routes/index.js","components/lists/Routes/Routes.js","components/items/JSONFormatter/index.js","components/items/JSONFormatter/JSONFormatter.js","components/items/CodeViewer/CodeViewer.js","components/items/CodeViewer/index.js","components/lists/DependenciesList/index.js","components/lists/DependenciesList/DependenciesList.js","components/lists/ParametersList/index.js","components/lists/ParametersList/ParametersList.js","components/lists/FunctionsList/index.js","components/lists/FunctionsList/FunctionsList.js","components/pages/Libraries/Libraries.js","components/pages/Libraries/index.js","components/pages/Routing/index.js","components/pages/Routing/Routing.js","components/pages/Dependencies/index.js","components/pages/Dependencies/Dependencies.js","components/pages/Dependency/index.js","components/pages/Dependency/Dependency.js","components/pages/Parameters/index.js","components/pages/Parameters/Parameters.js","components/pages/Services/index.js","components/pages/Services/Services.js","components/pages/Logs/Logs.js","components/pages/Logs/index.js","components/forms/StateAwareForm/StateAwareForm.js","components/forms/StateAwareForm/index.js","components/forms/EntityFieldForm/EntityFieldForm.js","components/forms/EntityFieldForm/index.js","components/pages/Entity/Entity.js","components/pages/Entity/index.js","components/pages/Entities/Entities.js","components/pages/Entities/index.js","components/pages/NotFound/index.js","components/pages/NotFound/NotFound.js","controllers/DashboardController.js","controllers/LibrariesController.js","controllers/DependencyInjectionController.js","controllers/DependencyInspectionController.js","controllers/RoutingController.js","controllers/ParametersController.js","controllers/ServicesController.js","controllers/LogsController.js","controllers/EntitiesController.js","controllers/EntityController.js","controllers/PageNotFoundController.js","config/services/index.js","config/services/controllers.js","config/services/router.js","registerServiceWorker.js","index.js"],"names":["manager","Map","App","name","this","instance","get","set","services","parameters","di","createDependencyResolver","initialize","getService","start","routesValues","AppToggle","state","status","error","loading","Error","setState","fetch","method","body","JSON","stringify","headers","ok","handleChange","props","results","json","instances","length","setTimeout","a","getApplicationState","Button","icon","getIcon","onClick","handleToggle","Boolean","color","Component","defaultProps","ClosableModal","open","toggleOpen","toggleClose","Modal","onClose","PureComponent","Actions","Content","Description","Header","CreateItem","item","handleSave","modal","value","title","trigger","children","React","cloneElement","ref","element","onSubmit","onChange","type","primary","Icon","handleCancel","Menu","handleStateChange","inverted","fixed","position","Item","Sidebar","style","Pushable","as","animation","vertical","visible","width","link","href","Pusher","Page","className","Segment","basic","Container","Dashboard","map","system","port","PORT","platform","release","memory","memoryAvailable","uptime","appUsage","cpu","appMemory","elapsed","Subheader","Table","Row","HeaderCell","Body","Cell","isNaN","Number","parseFloat","toFixed","parseInt","target","List","bulleted","items","InstalledLibraries","libraries","updates","Object","entries","library","version","key","size","celled","striped","prepareRows","Routes","routes","baseUrl","values","i","controller","action","path","methods","policy","JSONFormatter","data","format","e","constructor","toString","CodeViewer","language","vs2015","DependenciesList","dependencies","classDefinition","includes","aria-label","class","prepareConstructorArgs","prepareFunctionsArgs","Label","Function","functions","ParametersList","FunctionsList","functionName","function","args","arg","Libraries","included","fromEntries","filter","hasTarget","prevProps","prevState","devDependencies","Grid","columns","divided","Column","Routing","file","Dependencies","Dependency","serviceConfig","Parameters","Services","Logs","logs","Array","from","menuItem","render","Tab","Pane","attached","date","message","level","stack","log","panes","prepareLogSections","menu","secondary","pointing","StateAwareForm","undefined","EntityFieldForm","field","Form","handleSubmit","Input","required","label","placeholder","Group","widths","Message","header","content","onCancel","Entity","console","fieldItem","onSaveField","fields","handleDeleteField","disabled","handleSaveField","baseClassName","code","prepareFieldEditor","prepareFields","Entities","evt","stopPropagation","onDelete","entity","onCreate","onSelect","entities","handleSelectEntity","handleDeleteEntity","selectable","handleCreateEntity","prepareEntities","NotFound","DashboardController","clearInterval","poller","getSystemStats","setInterval","controllers","ReactController","LibrariesController","DependencyInjectionController","getDependencyInjection","DependencyInspectionController","params","RoutingController","getRouting","getBaseUrl","ParametersController","ServicesController","resourcePath","querystring","encode","LogsController","getLogs","handleSelect","handleDelete","handleCreate","history","push","getEntities","EntityController","getEntity","PageNotFoundController","NotFoundController","withDependencyInjection","EntitiesController","Router","app","getDependencyResolver","ReactRouterStrategy","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","catch","router","ReactDOM","document","getElementById","URL","process","origin","addEventListener","response","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4d5b9abd.chunk.js","sourcesContent":["import {createDependencyResolver} from '@tramwayjs/dependency-injector';\n\nvar manager = new Map();\n\nexport default class App {\n    constructor(name) {\n        this.name = name;\n        const instance = manager.get(name);\n\n        if (instance) {\n            return instance;\n        }\n\n        manager.set(name, this);\n    }\n\n    static initialize(name, services, parameters) {\n        return new App(name).initialize(services, parameters);\n    }\n    \n    initialize(services, parameters) {\n        this.di = createDependencyResolver(this.name).initialize(services, parameters);\n        return this;\n    }\n\n    start() {\n        let app = this.di.getService('app');\n        return app.initialize().start();\n    }\n\n    getDependencyResolver() {\n        return this.di || createDependencyResolver(this.name);\n    }\n}\n\nexport function app(name) {\n    const instance = manager.get(name);\n\n    if (instance) {\n        return instance;\n    }\n\n    return new App(name);\n}","const routesValues = [\n    {\n        \"methods\": [\"get\"],\n        \"controller\": 'controller.dashboard',\n        \"title\": \"Home\",\n    },\n    {\n        \"methods\": [\"get\"],\n        \"controller\": \"controller.libraries\",\n        \"action\": \"index\",\n        \"path\": \"libraries\",\n    },\n    {\n        \"controller\": \"controller.routing\",\n        \"methods\": [\"get\"],\n        \"path\": \"routing\",\n    },\n    {\n        \"controller\": \"controller.dependency-injection\",\n        \"methods\": [\"get\"],\n        \"path\": \"dependency-injection\",\n    },\n    {\n        \"controller\": \"controller.parameters\",\n        \"methods\": [\"get\"],\n        \"path\": \"parameters\",\n    },\n    {\n        \"controller\": \"controller.policies\",\n        \"methods\": [\"get\"],\n        \"path\": \"policies\",\n    },\n    {\n        \"controller\": \"controller.services\",\n        \"methods\": [\"get\"],\n        \"path\": \"services\",\n    },\n    {\n        \"controller\": \"controller.controllers\",\n        \"methods\": [\"get\"],\n        \"path\": \"controllers\",\n    },\n    {\n        \"controller\": \"controller.repositories\",\n        \"methods\": [\"get\"],\n        \"path\": \"repositories\",\n    },\n    {\n        \"controller\": \"controller.factories\",\n        \"methods\": [\"get\"],\n        \"path\": \"factories\",\n    },\n    {\n        \"controller\": \"controller.entities\",\n        \"methods\": [\"get\"],\n        \"path\": \"entities\",\n    },\n    {\n        \"controller\": \"controller.entity\",\n        \"methods\": [\"get\"],\n        \"path\": \"entities/:className\",\n    },\n    {\n        \"controller\": \"controller.dependency-inspection\",\n        \"path\": \"services/:key\",\n        \"methods\": [\"get\"],\n    },\n    {\n        \"controller\": \"controller.providers\",\n        \"methods\": [\"get\"],\n        \"path\": \"providers\",\n    },\n    {\n        \"controller\": \"controller.dependency-inspection\",\n        \"path\": \"providers/:key\",\n        \"methods\": [\"get\"],\n    },\n    {\n        \"controller\": \"controller.dependency-inspection\",\n        \"path\": \"dependency-injection/:key\",\n        \"methods\": [\"get\"],\n    },\n    {\n        \"controller\": \"controller.logs\",\n        \"path\": \"logs\",\n        \"methods\": [\"get\"],\n    },\n    {\n        \"controller\": 'controller.not_found',\n        \"methods\": [\"get\"],\n        \"path\": \"*\",\n    },\n];\n\nexport default routesValues;","import React, {Component} from 'react';\nimport { Button } from 'semantic-ui-react';\n\nexport default class AppToggle extends Component {\n    state = {\n        status: 'stopped',\n        error: false,\n        loading: false,\n    }\n\n    static defaultProps = {\n        handleChange: status => status,\n    }\n\n    static getIcon(status) {\n        switch(status) {\n            case 'active': return 'stop';\n            case 'stopped': return 'play';\n        }\n    }\n\n    async handleToggle(status) {\n        let state;\n\n        switch(status) {\n            case 'active': state = 'stopped'; break;\n            case 'stopped': state = 'active'; break;\n            default: throw new Error('Invalid status');\n        }\n\n        this.setState({loading: true})\n\n        let response = await fetch('http://localhost:8000/api/state', {\n            method: 'PATCH',\n            body: JSON.stringify({state}),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n\n        if (!response.ok) {\n            this.setState({error: true, loading: false})\n        }\n\n        this.setState({status: state, error: false, loading: false}, () => {\n            const {status} = this.state;\n            const {handleChange} = this.props;\n            return handleChange(status);\n        });\n    }\n\n    async getApplicationState() {\n        const results = await fetch('/api/state');\n        const {instances = []} = await results.json();\n        \n        this.setState({status: instances.length ? 'active' : 'stopped'});\n    }\n\n    async componentDidMount() {\n        setTimeout(async () => {\n            try {\n                await this.getApplicationState();\n            } catch(e) {\n                \n            }\n        }, 10);\n    }\n\n    render() {\n        const {status, error, loading} = this.state;\n\n        return (\n            <Button \n                icon={AppToggle.getIcon(status)} \n                onClick={async () => await this.handleToggle(status)} \n                error={Boolean(error)} \n                loading={loading}\n                color={'stopped' === status ? 'green': 'red'}\n            />\n        )\n    }\n}","import AppToggle from './AppToggle';\n\nexport default AppToggle;","import React, { PureComponent } from 'react';\nimport {Modal, Button} from 'semantic-ui-react';\n\nexport default class ClosableModal extends PureComponent {\n    state = {\n        open: false\n    };\n\n    static Actions = Modal.Actions;\n    static Content = Modal.Content;\n    static Description = Modal.Description;\n    static Header = Modal.Header;\n\n    toggleOpen = () => {\n        this.setState({open: true})\n    }\n\n    toggleClose = () => {\n        this.setState({open: false})\n    }\n\n    render() {\n        const {open: _o, ...props} = this.props;\n        const {open} = this.state;\n        return (\n            <Modal open={open} onClose={this.toggleClose} {...props}/>\n        );\n    }\n}","import ClosableModal from './ClosableModal';\n\nexport default ClosableModal;","import CreateItem from './CreateItem';\n\nexport default CreateItem; ","import React, { Component } from 'react';\nimport { ClosableModal as Modal } from '../../modals';\nimport { Button, Icon } from 'semantic-ui-react';\n\nexport default class CreateItem extends Component {\n    async handleSave() {\n        const {...item} = this.state;\n\n        try {\n            await this.props.handleSave(item)\n        } catch(e) {\n            return;\n        }\n\n        this.modal.toggleClose();\n    }\n\n    handleCancel() {\n        return this.modal.toggleClose();\n    }\n\n    handleChange({name, value}) {\n        this.setState({[name]: value});\n    }\n\n    render() {\n        const {title, trigger, children} = this.props;\n\n        return (\n            <Modal \n                trigger={React.cloneElement(trigger, {onClick: () => this.modal.toggleOpen()})} \n                ref={element => this.modal = element}\n            >\n                <Modal.Header>\n                    {title}\n                </Modal.Header>\n                <Modal.Content>\n                    {React.cloneElement(children, {onSubmit: () => this.handleSave(), onChange: value => this.handleChange(value)})}\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button type=\"button\" onClick={() => this.handleSave()} primary icon><Icon name=\"check\"/>Save</Button>\n                    <Button type=\"button\" onClick={() => this.handleCancel()}>Cancel</Button>\n                </Modal.Actions>\n            </Modal>\n        );\n    }\n}","import Menu from './Menu';\n\nexport default Menu;","import React, {Component} from 'react';\nimport { Menu as SemanticMenu } from \"semantic-ui-react\";\nimport { AppToggle } from '../../buttons';\n\nexport default class Menu extends Component {\n    render() {\n        const {handleStateChange} = this.props;\n\n        return (\n            <SemanticMenu inverted fixed=\"top\">\n                <SemanticMenu.Menu position=\"right\">\n                    <SemanticMenu.Item>\n                        <AppToggle handleChange={handleStateChange}/>\n                    </SemanticMenu.Item>\n                </SemanticMenu.Menu>\n            </SemanticMenu>\n        )\n    }\n}","import Sidebar from './Sidebar';\n\nexport default Sidebar;","import React, { PureComponent } from 'react';\nimport { Sidebar as SemanticSidebar, Menu, Icon } from \"semantic-ui-react\";\n\nexport default class Sidebar extends PureComponent {\n    render() {\n        const {children, style} = this.props;\n\n        return (\n            <SemanticSidebar.Pushable style={style}>\n                <SemanticSidebar\n                    as={Menu}\n                    animation='overlay'\n                    icon='labeled'\n                    inverted\n                    vertical\n                    visible\n                    width='thin'                        \n                >\n                    <Menu.Header>\n                        <Menu.Item icon=\"home\" link href=\"/\"/>\n                    </Menu.Header>\n                    <Menu.Item link href=\"/libraries\">\n                        <Icon name='npm' />\n                        Libraries\n                    </Menu.Item>\n                    <Menu.Item link href=\"/parameters\">\n                        <Icon name='settings' />\n                        Parameters\n                    </Menu.Item>\n                    <Menu.Item link href=\"/routing\">\n                        <Icon name='sitemap' />\n                        Routes\n                    </Menu.Item>\n                    <Menu.Item link href=\"/policies\">\n                        <Icon name='shield alternate' />\n                        Policies\n                    </Menu.Item>\n                    <Menu.Item link href=\"/controllers\">\n                        <Icon name='tasks' />\n                        Controllers\n                    </Menu.Item>\n                    <Menu.Item link href=\"/services\">\n                        <Icon name='file code' />\n                        Services\n                    </Menu.Item>\n                    <Menu.Item link href=\"/repositories\">\n                        <Icon name='database' />\n                        Repositories\n                    </Menu.Item>\n                    <Menu.Item link href=\"/factories\">\n                        <Icon name='factory' />\n                        Factories\n                    </Menu.Item>\n                    <Menu.Item link href=\"/entities\">\n                        <Icon name='file code' />\n                        Entities\n                    </Menu.Item>\n                    <Menu.Item link href=\"/providers\">\n                        <Icon name='database' />\n                        Providers\n                    </Menu.Item>\n                    <Menu.Item link href=\"/logs\">\n                        <Icon name='bug' />\n                        Logs\n                    </Menu.Item>\n                    <Menu.Item link href=\"/docs\">\n                        <Icon name='question circle outline' />\n                        Documentation\n                    </Menu.Item>\n                </SemanticSidebar>\n                <SemanticSidebar.Pusher>\n                    {children}\n                </SemanticSidebar.Pusher>\n            </SemanticSidebar.Pushable>\n        );\n    }\n}","import Page from './Page';\n\nexport default Page;","import React, {Component} from 'react';\nimport Menu from \"../Menu\";\nimport Sidebar from '../Sidebar';\nimport { Container, Segment } from \"semantic-ui-react\";\nimport './styles.css';\n\nexport default class Page extends Component {\n    render() {\n        const {handleStateChange, children} = this.props;\n        \n        return (\n            <div>\n                <Sidebar className=\"page sidebar\">\n                    <Menu handleStateChange={handleStateChange}/>\n                    <Segment basic className=\"page frame\">\n                        <Container className=\"page content\">\n                            {children}\n                        </Container>\n                    </Segment>\n                </Sidebar>\n            </div>\n        );\n    }\n}","import Dashboard from './Dashboard';\n\nexport default Dashboard;","import { Page } from '../../layout';\nimport React, {Component} from 'react';\nimport { Header, Table, List } from 'semantic-ui-react';\n\nexport default class Dashboard extends Component {\n    prepareInstances(instances) {\n        return instances.map(instance => <li>{instance}</li>);\n    }\n\n    render() {\n        const {parameters = {}, instances = [], system = {}} = this.props;\n        let {port, PORT} = parameters;\n\n        if (!port) {\n            port = PORT;\n        }\n\n        const {platform, release, memory, memoryAvailable, uptime} = system.system || {};\n        const {cpu, memory: appMemory, elapsed} = system.appUsage || {};\n        \n        return (\n            <Page>\n                <Header as=\"h2\">\n                    <Header.Content>\n                        Welcome to Tramway Manager\n                        <Header.Subheader>Manage Tramway's various components and dependencies here</Header.Subheader>\n                    </Header.Content>\n                </Header>\n\n                <Header as=\"h3\">\n                    System Stats\n                </Header>\n\n                <Table>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>Platform</Table.HeaderCell>\n                            <Table.HeaderCell>Release</Table.HeaderCell>\n                            <Table.HeaderCell>Memory</Table.HeaderCell>\n                            <Table.HeaderCell>Memory Available</Table.HeaderCell>\n                            <Table.HeaderCell>Memory Used</Table.HeaderCell>\n                            <Table.HeaderCell>CPU Used</Table.HeaderCell>\n                            <Table.HeaderCell>App Uptime</Table.HeaderCell>\n                            <Table.HeaderCell>System Uptime</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        <Table.Row>\n                            <Table.Cell>{platform}</Table.Cell>\n                            <Table.Cell>{release}</Table.Cell>\n                            <Table.Cell>{!isNaN(memory) ? `${Number.parseFloat(memory/1024/1024/1024).toFixed(2)} GB` : ''}</Table.Cell>\n                            <Table.Cell>{!isNaN(memoryAvailable) ? `${Number.parseFloat(memoryAvailable/1024/1024/1024).toFixed(2)} GB` : ''}</Table.Cell>\n                            <Table.Cell>{!isNaN(appMemory) ? `${Number.parseFloat(appMemory/1024/1024/1024).toFixed(2)} GB` : ''}</Table.Cell>\n                            <Table.Cell>{!isNaN(cpu) ? `${cpu} %` : ''}</Table.Cell>\n                            <Table.Cell>{!isNaN(elapsed) ? `${Number.parseInt(elapsed/60/1000)} min` : ''}</Table.Cell>\n                            <Table.Cell>{!isNaN(uptime) ? `${Number.parseInt(uptime/60)} min` : ''}</Table.Cell>\n                        </Table.Row>\n                    </Table.Body>\n                </Table>\n\n                <Header as=\"h3\">\n                    Project Details\n                </Header>\n\n                <Table>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>Attribute</Table.HeaderCell>\n                            <Table.HeaderCell>Value</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        <Table.Row>\n                            <Table.Cell>Port</Table.Cell>\n                            <Table.Cell><a href={`http://localhost:${port}/`} target=\"_blank\">{port}</a></Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell>Instances</Table.Cell>\n                            <Table.Cell>\n                                <List bulleted items={instances}/>\n                            </Table.Cell>\n                        </Table.Row>\n                    </Table.Body>\n                </Table>\n\n            </Page>\n        )\n    }\n}","import InstalledLibraries from './InstalledLibraries';\n\nexport default InstalledLibraries;","import React, {Component} from 'react';\nimport { Table, Button } from \"semantic-ui-react\";\n\nexport default class InstalledLibraries extends Component {\n    prepareRows() {\n        const {libraries, updates} = this.props;\n\n        return Object.entries(libraries).map(([library, version]) => (\n            <Table.Row key={library}>\n                <Table.Cell>{library}</Table.Cell>\n                <Table.Cell>{version}</Table.Cell>\n                <Table.Cell>{updates[library]}</Table.Cell>\n                <Table.Cell><Button size=\"mini\" primary>Update</Button></Table.Cell>\n            </Table.Row>\n        ))\n    }\n\n    render() {\n        return (\n            <Table celled striped>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Module</Table.HeaderCell>\n                        <Table.HeaderCell>Version</Table.HeaderCell>\n                        <Table.HeaderCell>Latest Version</Table.HeaderCell>\n                        <Table.HeaderCell></Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {this.prepareRows()}\n                </Table.Body>\n            </Table>\n        )\n    }\n}","import Routes from './Routes';\n\nexport default Routes;","import React, {Component} from 'react';\nimport { Table } from \"semantic-ui-react\";\n\nexport default class Routes extends Component {\n    prepareRows() {\n        const {routes = [], baseUrl = ''} = this.props;\n\n        return Object.values(routes).map(({controller, action, path = '', methods, policy = 'None'}, i) => (\n            <Table.Row key={i}>\n                <Table.Cell><a href={`${baseUrl}/${path}`} target=\"_blank\">{`/${path}`}</a></Table.Cell>\n                <Table.Cell className=\"uppercase\">{methods}</Table.Cell>\n                <Table.Cell><a href={`/dependency-injection/${controller}`}>{controller}</a></Table.Cell>\n                <Table.Cell>{action}</Table.Cell>\n                <Table.Cell>{policy}</Table.Cell>\n            </Table.Row>\n        ))\n    }\n\n    render() {\n        return (\n            <Table celled striped>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Path</Table.HeaderCell>\n                        <Table.HeaderCell>HTTP Method</Table.HeaderCell>\n                        <Table.HeaderCell>Controller</Table.HeaderCell>\n                        <Table.HeaderCell>Action</Table.HeaderCell>\n                        <Table.HeaderCell>Policy</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {this.prepareRows()}\n                </Table.Body>\n            </Table>\n        )\n    }\n}","import JSONFormatter from './JSONFormatter';\n\nexport default JSONFormatter;","import React, {Component} from 'react';\n\nexport default class JSONFormatter extends Component {\n    static format(data) {\n        let value;\n\n        try {\n            value = JSON.stringify(data, null, 2)\n        } catch(e) {\n            if (data.constructor) {\n                value = data.constructor.name;\n            } else {\n                value = data.toString();\n            }\n        }\n        \n        return value;\n    }\n\n    render() {\n        const {data, className} = this.props;\n        let value = JSONFormatter.format(data);\n\n        return (\n            <div className={className}>\n                <pre>{value}</pre>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { vs2015 } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { Container } from 'semantic-ui-react';\n\nexport default class CodeViewer extends Component {\n    static defaultProps = {\n        language: 'javascript',\n    }\n\n    render() {\n        const {language, children, className} = this.props;\n        return (\n            <Container className={className}>\n                <SyntaxHighlighter language={language} style={vs2015}>\n                    {children}\n                </SyntaxHighlighter>\n            </Container>\n        )\n    }\n}","import CodeViewer from './CodeViewer';\n\nexport default CodeViewer;","import DependenciesList from './DependenciesList';\n\nexport default DependenciesList;","import React, {Component} from 'react';\nimport { Table, Icon, Label } from \"semantic-ui-react\";\nimport { JSONFormatter } from \"../../items\";\n\nexport default class DependenciesList extends Component {\n    prepareRows() {\n        const {dependencies = {}, instances = []} = this.props;\n        const items = Object.entries(dependencies);\n\n        if (!items.length) {\n            return (\n                <Table.Row>\n                    <Table.Cell>No dependencies found</Table.Cell>\n                </Table.Row>\n            );\n        }\n\n        return items.map(([key, classDefinition]) => (\n            <Table.Row key={key}>\n                <Table.Cell>\n                    {instances.includes(key) && <Icon color=\"green\" name=\"check circle\" aria-label=\"The instance has been created and the service is being used\" link/>}\n                </Table.Cell>\n                <Table.Cell><a href={`/dependency-injection/${key}`}>{key}</a></Table.Cell>\n                <Table.Cell>{classDefinition.class}</Table.Cell>\n                <Table.Cell><ol>{this.prepareConstructorArgs(classDefinition)}</ol></Table.Cell>\n                <Table.Cell>{this.prepareFunctionsArgs(classDefinition)}</Table.Cell>\n            </Table.Row>\n        ))\n    }\n\n    prepareConstructorArgs(classDefinition) {\n        const constructorArgs = classDefinition.constructor;\n\n        return constructorArgs.map(item => {\n            const {type, key} = item;\n\n            if (type && key) {\n                return <li><a href={`/dependency-injection/${key}`}>{key} <Label size=\"tiny\">{type}</Label></a></li>\n            }\n\n            if (item instanceof Function) {\n                return <li>{item.name}()</li>\n            }\n\n            try {\n                return <li><JSONFormatter data={item}/></li>\n            } catch(e) {\n                if (item instanceof Object) {\n                    return <li>{item.constructor.name}</li>\n                }\n            }\n\n            return <li>{item.toString()}</li>\n        })\n    }\n    \n    prepareFunctionsArgs(classDefinition) {\n        return classDefinition.functions ? classDefinition.functions.length : 0\n    }\n\n    render() {\n        return (\n            <Table celled striped>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell></Table.HeaderCell>\n                        <Table.HeaderCell>Key</Table.HeaderCell>\n                        <Table.HeaderCell>Class</Table.HeaderCell>\n                        <Table.HeaderCell>Constructor</Table.HeaderCell>\n                        <Table.HeaderCell>Function Calls</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {this.prepareRows()}\n                </Table.Body>\n            </Table>\n        )\n    }\n}","import ParametersList from './ParametersList';\n\nexport default ParametersList;","import React, {Component} from 'react';\nimport { Table } from \"semantic-ui-react\";\nimport { JSONFormatter, CodeViewer } from \"../../items\";\n\nexport default class ParametersList extends Component {\n    prepareRows() {\n        const {parameters = {}} = this.props;\n        const items = parameters ? Object.entries(parameters) : [];\n\n        if (!items.length) {\n            return (\n                <Table.Row>\n                    <Table.Cell>No parameters found</Table.Cell>\n                </Table.Row>\n            );\n        }\n\n        return items.map(([key, value]) => {\n            if (value instanceof Function) {\n                value = `${value.name}()`;\n            } \n            \n            if (value instanceof Object) {\n                value = <CodeViewer language=\"json\">{JSONFormatter.format(value)}</CodeViewer>\n            }\n\n            return (\n                <Table.Row key={key}>\n                    <Table.Cell>{key}</Table.Cell>\n                    <Table.Cell>{value}</Table.Cell>\n                </Table.Row>\n            )\n        })\n    }\n\n    render() {\n        return (\n            <Table celled striped>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Key</Table.HeaderCell>\n                        <Table.HeaderCell>Value</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {this.prepareRows()}\n                </Table.Body>\n            </Table>\n        )\n    }\n}","import FunctionsList from './FunctionsList';\n\nexport default FunctionsList;","import React, {Component} from 'react';\nimport { Table } from \"semantic-ui-react\";\n\nexport default class FunctionsList extends Component {\n    prepareRows() {\n        const {functions = []} = this.props;\n\n        if (!functions.length) {\n            return (\n                <Table.Row>\n                    <Table.Cell>No functions found</Table.Cell>\n                </Table.Row>\n            );\n        }\n\n        return functions.map(({function: functionName, args = []}, i) => (\n            <Table.Row key={`${functionName}${i}`}>\n                <Table.Cell>{functionName}</Table.Cell>\n                <Table.Cell>\n                    <ol>\n                        {args.map(arg => {\n                            if (arg instanceof Function) {\n                                return <li>{arg.name}</li>;\n                            }\n\n                            if (arg instanceof Object) {\n                                return <li>{arg.constructor.name}</li>\n                            }\n\n                            return <li>{arg.toString()}</li>;\n                        })}\n                    </ol>\n                </Table.Cell>\n            </Table.Row>\n        ))\n    }\n\n    render() {\n        return (\n            <Table celled striped>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Function</Table.HeaderCell>\n                        <Table.HeaderCell>Arguments</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {this.prepareRows()}\n                </Table.Body>\n            </Table>\n        )\n    }\n}","import React, {Component} from 'react';\nimport { Page } from \"../../layout\";\nimport { InstalledLibraries } from \"../../lists\";\nimport { Header, Grid, Segment } from \"semantic-ui-react\";\n\nexport default class Libraries extends Component {\n    static defaultProps = {\n        dependencies: [],\n        devDependencies: [],\n        updates: [],\n    };\n\n    state = {\n        loading: true,\n    }\n\n    filter(dependencies, target, included = true) {\n        return Object.fromEntries(\n            Object\n                .entries(dependencies)\n                .filter(\n                    ([library]) => {\n                        const hasTarget = library.includes(target);\n\n                        return (!included || hasTarget) && !(!included && hasTarget);\n                    }\n                )\n        );\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const {dependencies, devDependencies, updates} = this.props;\n\n        if (prevProps.dependencies === dependencies && prevProps.devDependencies === devDependencies && prevProps.updates === updates) {\n            return;\n        }\n\n        this.setState({loading: false})\n    }\n\n    render() {\n        const {dependencies, devDependencies, updates} = this.props;\n        const {loading} = this.state;\n        \n        return (\n            <Page>\n                <Grid columns={2} divided>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Header as='h2'>Tramway Dependencies</Header>\n                                <Segment basic vertical loading={loading}>\n                                    <InstalledLibraries libraries={this.filter(dependencies, 'tramway')} updates={this.filter(updates, 'tramway')}/>\n                                </Segment>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Header as='h2'>External Dependencies</Header>\n                            <Segment basic vertical loading={loading}>\n                                <InstalledLibraries libraries={this.filter(dependencies, 'tramway', false)} updates={this.filter(updates, 'tramway', false)}/>\n                            </Segment>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Header as='h2'>Babel Dependencies</Header>\n                            <Segment basic vertical loading={loading}>\n                                <InstalledLibraries libraries={this.filter(devDependencies, 'babel')} updates={this.filter(updates, 'babel')}/>\n                            </Segment>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Header as='h2'>Development Dependencies</Header>\n                            <Segment basic vertical loading={loading}>\n                                <InstalledLibraries libraries={this.filter(devDependencies, 'babel', false)} updates={this.filter(updates, 'babel', false)}/>\n                            </Segment>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Page>\n        )\n    }\n}","import Libraries from './Libraries';\n\nexport default Libraries;","import Routing from './Routing';\nexport default Routing;","import React, {Component} from 'react';\nimport { Page } from \"../../layout\";\nimport { Routes } from \"../../lists\";\nimport { Segment, Header } from 'semantic-ui-react';\n\nexport default class Routing extends Component {\n    state = {\n        loading: true,\n    }\n\n    render() {\n        const {file, routes, baseUrl} = this.props;\n        const {loading} = this.state;\n\n        return (\n            <Page>\n                <Header as='h2'>Routes</Header>\n                {file}\n                <Segment basic vertical loading={loading}>\n                    <Routes routes={routes} baseUrl={baseUrl}/>\n                </Segment>\n            </Page>\n        )\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const {file, routes} = this.props;\n\n        if (prevProps.file === file && prevProps.routes === routes) {\n            return;\n        }\n\n        this.setState({loading: false})\n    }\n}","import Dependencies from './Dependencies';\nexport default Dependencies;","import React, {Component} from 'react';\nimport { Page } from \"../../layout\";\nimport { DependenciesList, ParametersList } from \"../../lists\";\nimport { Header, Segment } from \"semantic-ui-react\";\n\nexport default class Dependencies extends Component {\n    state = {\n        loading: true,\n    }\n    \n    render() {\n        const {services, parameters, instances, handleStateChange} = this.props;\n        const {loading} = this.state;\n\n        return (\n            <Page handleStateChange={handleStateChange}>\n                <Header as='h2'>Parameters</Header>\n                <Segment basic vertical loading={loading}>\n                    <ParametersList parameters={parameters}/>\n                </Segment>\n\n                <Header as='h2'>Services</Header>\n                <Segment basic vertical loading={loading}>\n                    <DependenciesList dependencies={services} instances={instances}/>\n                </Segment>\n            </Page>\n        )\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const {services, parameters, instances} = this.props;\n\n        if (prevProps.services === services && prevProps.parameters === parameters && prevProps.instances === instances) {\n            return;\n        }\n\n        this.setState({loading: false})\n    }\n}","import Dependency from './Dependency';\nexport default Dependency;","import React, {Component} from 'react';\nimport { Page } from \"../../layout\";\nimport { DependenciesList, ParametersList, FunctionsList } from \"../../lists\";\nimport { Header, Segment } from \"semantic-ui-react\";\nimport { JSONFormatter, CodeViewer } from \"../../items\";\n\nexport default class Dependency extends Component {\n    state = {\n        loading: true,\n    }\n\n    render() {\n        const {className, services, parameters, functions, serviceConfig} = this.props;\n        const {loading} = this.state;\n\n        return (\n            <Page>\n                <Header as=\"h2\">{className}</Header>\n                <Header as=\"h3\">Dependencies</Header>\n                <Segment basic vertical loading={loading}>\n                    <DependenciesList dependencies={services}/>\n                </Segment>\n\n                <Header as=\"h3\">Parameters</Header>\n                <Segment basic vertical loading={loading}>\n                    <ParametersList parameters={parameters}/>\n                </Segment>\n\n                <Header as=\"h3\">Function Calls</Header>\n                <Segment basic vertical loading={loading}>\n                    <FunctionsList functions={functions}/>\n                </Segment>\n\n                <Header as=\"h3\">Declaration</Header>\n                <CodeViewer language=\"json\">\n                    {JSONFormatter.format(serviceConfig) || ''}\n                </CodeViewer>\n            </Page>\n        )\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const {className, services, parameters, functions, serviceConfig} = this.props;\n\n        if (prevProps.className === className && prevProps.services === services && prevProps.parameters === parameters && prevProps.functions === functions && prevProps.serviceConfig === serviceConfig) {\n            return;\n        }\n\n        this.setState({loading: false})\n    }\n}","import Parameters from './Parameters';\n\nexport default Parameters;","import React, {Component} from 'react';\nimport { Page } from \"../../layout\";\nimport { ParametersList } from \"../../lists\";\nimport { Header, Segment } from \"semantic-ui-react\";\n\nexport default class Parameters extends Component {\n    state = {\n        loading: true,\n    }\n    \n    render() {\n        const {parameters, handleStateChange} = this.props;\n        const {loading} = this.state;\n\n        return (\n            <Page handleStateChange={handleStateChange}>\n                <Header as='h2'>Parameters</Header>\n                <Segment basic vertical loading={loading}>\n                    <ParametersList parameters={parameters}/>\n                </Segment>\n            </Page>\n        )\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const {parameters} = this.props;\n\n        if (prevProps.parameters === parameters) {\n            return;\n        }\n\n        this.setState({loading: false})\n    }\n}","import Services from './Services';\n\nexport default Services;","import React, {Component} from 'react';\nimport { Page } from \"../../layout\";\nimport { DependenciesList } from \"../../lists\";\nimport { Header, Segment } from \"semantic-ui-react\";\n\nexport default class Services extends Component {\n    state = {\n        loading: true,\n    }\n    \n    render() {\n        const {services, instances, handleStateChange} = this.props;\n        const {loading} = this.state;\n\n        return (\n            <Page handleStateChange={handleStateChange}>\n                <Header as='h2'>Services</Header>\n                <Segment basic vertical loading={loading}>\n                    <DependenciesList dependencies={services} instances={instances}/>\n                </Segment>\n            </Page>\n        )\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const {services, parameters, instances} = this.props;\n\n        if (prevProps.services === services && prevProps.instances === instances) {\n            return;\n        }\n\n        this.setState({loading: false})\n    }\n}","import React, {Component} from 'react';\nimport { Page } from \"../../layout\";\nimport { Table, Tab } from \"semantic-ui-react\";\nimport { JSONFormatter, CodeViewer } from '../../items';\n\nimport './styles.css'\n\nexport default class Logs extends Component {\n    static defaultProps = {\n        logs: {},\n    };\n\n    prepareLogSections(logs = {}) {\n        return Array.from(Object.entries(logs)).map(([file, logs]) => (\n            {\n                menuItem: file,\n                render: () => (\n                    <Tab.Pane attached={false} basic>\n                        <Table>\n                            <Table.Header>\n                                <Table.Row>\n                                    <Table.HeaderCell>Timestamp</Table.HeaderCell>\n                                    <Table.HeaderCell>Level</Table.HeaderCell>\n                                    <Table.HeaderCell>Message</Table.HeaderCell>\n                                    <Table.HeaderCell>Stack</Table.HeaderCell>\n                                    <Table.HeaderCell>JSON</Table.HeaderCell>\n                                </Table.Row>\n                            </Table.Header>\n                            <Table.Body>\n                                {logs.map(({date, message, level, stack, ...log}) => (\n                                    <Table.Row>\n                                        <Table.Cell>{date}</Table.Cell>\n                                        <Table.Cell>{level}</Table.Cell>\n                                        <Table.Cell>{message}</Table.Cell>\n                                        <Table.Cell>{stack}</Table.Cell>\n                                        <Table.Cell><CodeViewer className=\"page logs\" language=\"json\">{JSONFormatter.format(log)}</CodeViewer></Table.Cell>\n                                    </Table.Row>\n                                ))}\n                            </Table.Body>\n                        </Table>\n                    </Tab.Pane>\n                )\n            }\n        ))\n    }\n\n    render() {\n        const {logs} = this.props;\n        \n        return (\n            <Page>\n                <Tab\n                    panes={this.prepareLogSections(logs)}\n                    menu={{secondary: true, pointing: true}}\n                />\n            </Page>\n        )\n    }\n}","import Logs from './Logs';\n\nexport default Logs;","import React, {PureComponent} from 'react';\n\nexport default class StateAwareForm extends PureComponent {\n    state = {};\n\n    static defaultProps = {\n        onSubmit: values => values,\n    };\n\n    handleChange({name, value}) {\n        if (this.props.onChange) {\n            this.props.onChange({name, value})\n        }\n\n        this.setState({[name]: value});\n    }\n\n    async handleSubmit() {\n        const {loading, error, ...data} = this.state;\n\n        try {\n            this.setState({error: undefined, loading: true})\n            await this.props.onSubmit(data);\n        } catch(e) {\n            this.setState({error: e, loading: false})\n        }\n    }\n}","import StateAwareForm from './StateAwareForm';\nexport default StateAwareForm;","import React from 'react';\nimport { Form, Message, Header } from 'semantic-ui-react';\nimport StateAwareForm from '../StateAwareForm';\n\nexport default class EntityFieldForm extends StateAwareForm {\n    static defaultProps = {\n        onSubmit: () => {},\n        onCancel: () => {},\n    };\n\n    render() {\n        const {error, loading, field, get, set} = this.state;\n\n        return (\n            <Form onSubmit={() => this.handleSubmit()} error={!!error}>\n                <Form.Input\n                    required\n                    name='field'\n                    label='Field'\n                    placeholder=\"id\"\n                    value={field}\n                    onChange={(e, value) => this.handleChange(value)}\n                />\n                <Header as=\"h4\">The getter and setter will automatically be generated from the name but in some exceptions, you may want to use a custom getter/setter instead:</Header>\n                <Form.Group widths=\"equal\">\n                    <Form.Input\n                        name='get'\n                        label='Getter'\n                        placeholder=\"getId\"\n                        value={get}\n                        onChange={(e, value) => this.handleChange(value)}\n                    />\n                    <Form.Input\n                        name='set'\n                        label='Setter'\n                        placeholder=\"setId\"\n                        value={set}\n                        onChange={(e, value) => this.handleChange(value)}\n                    />\n                </Form.Group>\n                \n                {loading && (<p>Working on it</p>)}\n                {error && (\n                    <Message\n                        error\n                        header='Something went wrong'\n                        content={error && error.message}\n                    />\n                )}\n            </Form>\n        );\n    }\n}","import EntityFieldForm from './EntityFieldForm';\n\nexport default EntityFieldForm;","import React, { Component } from 'react';\nimport { Page } from \"../../layout\";\nimport { Grid, Header, Button, Table } from \"semantic-ui-react\";\nimport { CodeViewer, JSONFormatter } from '../../items';\nimport { CreateItem } from '../../buttons';\nimport { EntityFieldForm } from '../../forms';\n\nexport default class Entity extends Component {\n    static defaultProps = {\n        code: '',\n    };\n\n    handleDeleteField(field, get, set) {\n        console.log(field, get, set)\n    }\n\n    async handleSaveField(fieldItem) {\n        return await this.props.onSaveField(fieldItem)\n    }\n\n    prepareFields(fields = []) {\n        return fields.map(({field, get, set}) => (\n            <Table.Row>\n                <Table.Cell>{field}</Table.Cell>\n                <Table.Cell>{get}</Table.Cell>\n                <Table.Cell>{set}</Table.Cell>\n                <Table.Cell><Button size=\"tiny\" color=\"red\" icon=\"trash\" onClick={() => this.handleDeleteField(field, get, set)} disabled/></Table.Cell>\n            </Table.Row>\n        ));\n    }\n\n    prepareFieldEditor() {\n        return (\n            <CreateItem \n                title=\"Create or Update Field\"\n                trigger={<Button size=\"tiny\" color=\"green\" icon=\"plus\"/>}\n                handleSave={async fieldItem => await this.handleSaveField(fieldItem)}\n            >\n                <EntityFieldForm/>\n            </CreateItem>\n        );\n    }\n\n    render() {\n        const {className, baseClassName, fields, code} = this.props;\n\n        return (\n            <Page>\n                <Header as=\"h2\">\n                    <Header.Content>{className}</Header.Content>\n                    <Header.Subheader>{baseClassName}</Header.Subheader>\n                </Header>\n                <Grid>\n                    <Grid.Row>\n                        <Grid.Column width={12}>\n                            <CodeViewer>\n                                {code}\n                            </CodeViewer>\n                        </Grid.Column>\n                        <Grid.Column width={4}>\n                            <Header as=\"h3\">Fields</Header>\n                            <Table>\n                                <Table.Header>\n                                    <Table.Row>\n                                        <Table.HeaderCell>Field</Table.HeaderCell>\n                                        <Table.HeaderCell>Getter</Table.HeaderCell>\n                                        <Table.HeaderCell>Setter</Table.HeaderCell>\n                                        <Table.HeaderCell>{this.prepareFieldEditor()}</Table.HeaderCell>\n                                    </Table.Row>\n                                </Table.Header>\n                                <Table.Body>\n                                    {this.prepareFields(fields)}\n                                </Table.Body>\n                            </Table>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Page>\n        )\n    }\n}","import Entity from './Entity';\nexport default Entity;","import React, { Component } from 'react';\nimport { Page } from \"../../layout\";\nimport { Table, Button, Header } from \"semantic-ui-react\";\n\nexport default class Entities extends Component {\n    static defaultProps = {\n        onSelect: className => className,\n        onDelete: className => className,\n        onCreate: entity => entity,\n    };\n\n    handleDeleteEntity(evt, className) {\n        evt.stopPropagation();\n        return this.props.onDelete(className);\n    }\n\n    handleCreateEntity() {\n        console.log('open an editor or something')\n    }\n\n    handleSaveEntity(entity) {\n        return this.props.onCreate(entity);\n    }\n\n    handleSelectEntity(className) {\n        return this.props.onSelect(className);\n    }\n\n    prepareEntities(entities = []) {\n        return entities.map(({className, baseClassName}) => (\n            <Table.Row onClick={() => this.handleSelectEntity(className)}>\n                <Table.Cell>{className}</Table.Cell>\n                <Table.Cell>{baseClassName}</Table.Cell>\n                <Table.Cell><Button size=\"tiny\" color=\"red\" icon=\"trash\" onClick={evt => this.handleDeleteEntity(evt, className)} disabled/></Table.Cell>\n            </Table.Row>\n        ))\n    }\n\n    render() {\n        const {entities = {}} = this.props;\n\n        return (\n            <Page>\n                <Header as=\"h2\">Entities</Header>\n                <Table selectable striped>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>Class</Table.HeaderCell>\n                            <Table.HeaderCell>Base Class</Table.HeaderCell>\n                            <Table.HeaderCell><Button size=\"tiny\" color=\"green\" icon=\"plus\" onClick={() => this.handleCreateEntity()} disabled/></Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        {this.prepareEntities(Object.values(entities))}\n                    </Table.Body>\n                </Table>\n            </Page>\n        )\n    }\n}","import Entities from './Entities';\nexport default Entities;","import NotFound from './NotFound';\n\nexport default NotFound;","import React, { PureComponent } from 'react';\nimport { Page } from \"../../layout\";\n\nexport default class NotFound extends PureComponent {\n    render() {\n        return (\n            <Page>\n                The route you're looking for could not be found.\n            </Page>\n        );\n    }\n}\n","import React from 'react';\nimport {controllers} from 'tramway-router-react-strategy';\nimport {Dashboard} from '../components/pages';\nconst {ReactController} = controllers;\n\nexport default class DashboardController extends ReactController {  \n    state = {};\n\n    async getApplicationState() {\n        try {\n            const results = await fetch('/api/state');\n            const {parameters, instances} = await results.json();\n            \n            this.setState({parameters, instances});\n        } catch(e) {\n            this.setState({parameters: undefined, instances: undefined})\n        }\n    }\n\n    async getSystemStats() {\n        try {\n            const results = await fetch('/api/system');\n            const system = await results.json();\n            \n            this.setState({system});\n        } catch(e) {\n            this.setState({system: undefined});\n            clearInterval(this.poller);\n        }\n    }\n\n    async componentDidMount() {\n        await this.getApplicationState();\n        await this.getSystemStats();\n\n        this.poller = setInterval(async () => {\n            await this.getSystemStats();\n        }, 6000)\n    }\n\n    render() {\n        const {parameters, instances, system} = this.state;\n        return <Dashboard parameters={parameters} instances={instances} system={system}/>\n    }\n}\n","import React from 'react';\nimport {controllers} from 'tramway-router-react-strategy';\nimport {Libraries} from '../components/pages';\nconst {ReactController} = controllers;\n\nexport default class LibrariesController extends ReactController {\n    state = {};\n    \n    render() {\n        const {dependencies, devDependencies, updates} = this.state;\n\n        return <Libraries dependencies={dependencies} devDependencies={devDependencies} updates={updates}/>\n    }\n\n    async componentDidMount() {\n        const results = await fetch('/api/libraries');\n        const {dependencies, devDependencies, updates} = await results.json();\n        \n        this.setState({dependencies, devDependencies, updates});\n    }\n}\n","import React from 'react';\nimport {controllers} from 'tramway-router-react-strategy';\nimport {Dependencies} from '../components/pages';\nconst {ReactController} = controllers;\n\nexport default class DependencyInjectionController extends ReactController {\n    state = {};\n\n    async handleStateChange(state) {\n        if (state === this.state.state) {\n            return;\n        }\n\n        setTimeout(async () => await this.getDependencyInjection(), 3000)\n    }\n    \n    render() {\n        const {services, parameters, instances} = this.state;\n\n        return (\n            <Dependencies\n                services={services}\n                parameters={parameters}\n                instances={instances}\n                handleStateChange={async state => await this.handleStateChange(state)}\n            />\n        )\n    }\n\n    async componentDidMount() {\n        await this.getDependencyInjection();\n    }\n\n    async getDependencyInjection() {\n        const results = await fetch('/api/dependency-injection');\n        const {services, parameters, instances} = await results.json();\n        \n        this.setState({services, parameters, instances});\n    }\n}","import React from 'react';\nimport {controllers} from 'tramway-router-react-strategy';\nimport {Dependency} from '../components/pages';\nconst {ReactController} = controllers;\n\nexport default class DependencyInspectionController extends ReactController {\n    state = {};\n    \n    render() {\n        const {className, services, functions, parameters, serviceConfig} = this.state;\n\n        return (\n            <Dependency \n                className={className}\n                services={services}\n                functions={functions}\n                parameters={parameters}\n                serviceConfig={serviceConfig}\n            />\n        )\n    }\n\n    async componentDidMount() {\n        const {key} = this.params;\n\n        const results = await fetch(`/api/dependency-injection/${key}`);\n        const {className, services, functions, parameters, serviceConfig} = await results.json();\n        \n        this.setState({className, services, functions, parameters, serviceConfig});\n    }\n}\n","import React from 'react';\nimport {controllers} from 'tramway-router-react-strategy';\nimport {Routing} from '../components/pages';\nconst {ReactController} = controllers;\n\nexport default class RoutingController extends ReactController {\n    state = {};\n    \n    render() {\n        const {routes, baseUrl} = this.state;\n\n        return <Routing routes={routes} baseUrl={baseUrl}/>\n    }\n\n    async componentDidMount() {\n        try {\n            await this.getRouting();\n            await this.getBaseUrl();\n        } catch(e) {\n            \n        }\n    }\n\n    async getRouting() {\n        const results = await fetch('/api/routing');\n        const {routes} = await results.json();\n        \n        this.setState({routes});\n    }\n\n    async getBaseUrl() {\n        const results = await fetch('/api/state');\n        const {parameters} = await results.json();\n        let {port, PORT} = parameters;\n\n        if (!port) {\n            port = PORT;\n        }\n        \n        this.setState({baseUrl: `http://localhost:${port}`});\n    }\n}\n","import React from 'react';\nimport {controllers} from 'tramway-router-react-strategy';\nimport {Parameters} from '../components/pages';\nconst {ReactController} = controllers;\n\nexport default class ParametersController extends ReactController {\n    state = {};\n\n    async handleStateChange(state) {\n        if (state === this.state.state) {\n            return;\n        }\n\n        setTimeout(async () => await this.getDependencyInjection(), 3000)\n    }\n    \n    render() {\n        const {parameters} = this.state;\n\n        return (\n            <Parameters\n                parameters={parameters}\n                handleStateChange={async state => await this.handleStateChange(state)}\n            />\n        )\n    }\n\n    async componentDidMount() {\n        await this.getDependencyInjection();\n    }\n\n    async getDependencyInjection() {\n        const results = await fetch('/api/dependency-injection');\n        const {parameters} = await results.json();\n        \n        this.setState({parameters});\n    }\n}","import React from 'react';\nimport {controllers} from 'tramway-router-react-strategy';\nimport {Services} from '../components/pages';\nimport querystring from 'querystring';\nconst {ReactController} = controllers;\n\nexport default class ServicesController extends ReactController {\n    state = {};\n\n    constructor({args: [filter], ...props}) {\n        super(props);\n        this.filter = filter;\n    }\n\n    async handleStateChange(state) {\n        if (state === this.state.state) {\n            return;\n        }\n\n        setTimeout(async () => await this.getDependencyInjection(), 3000)\n    }\n    \n    render() {\n        const {services, instances} = this.state;\n\n        return (\n            <Services\n                services={services}\n                instances={instances}\n                handleStateChange={async state => await this.handleStateChange(state)}\n            />\n        )\n    }\n\n    async componentDidMount() {\n        await this.getDependencyInjection();\n    }\n\n    async getDependencyInjection() {\n        let resourcePath = '/api/dependency-injection';\n\n        if (this.filter) {\n            resourcePath = `${resourcePath}?${querystring.encode({filter: this.filter})}`;\n        }\n        \n        const results = await fetch(resourcePath);\n        const {services, instances} = await results.json();\n        \n        this.setState({services, instances});\n    }\n}","import React from 'react';\nimport {controllers} from 'tramway-router-react-strategy';\nimport {Logs} from '../components/pages';\nconst {ReactController} = controllers;\n\nexport default class LogsController extends ReactController {\n    state = {};\n    \n    render() {\n        const {logs} = this.state;\n\n        return <Logs logs={logs}/>\n    }\n\n    async componentDidMount() {\n        await this.getLogs();\n\n        setInterval(async () => await this.getLogs(), 1000);\n    }\n\n    async getLogs() {\n        const results = await fetch('/api/logs');\n        const logs = await results.json();\n        \n        this.setState({logs});\n    }\n}\n","import React from 'react';\nimport {controllers} from 'tramway-router-react-strategy';\nimport { Entities } from '../components/pages';\nconst {ReactController} = controllers;\n\nexport default class ServicesController extends ReactController {\n    state = {};\n    \n    render() {\n        const {entities} = this.state;\n\n        return (\n            <Entities \n                entities={entities} \n                onSelect={className => this.handleSelect(className)}\n                onDelete={async className => await this.handleDelete(className)}\n                onCreate={async entity => await this.handleCreate(entity)}\n            />\n        )\n    }\n\n    handleSelect(className) {\n        this.history.push(`/entities/${className}`);\n    }\n\n    async handleCreate(entity) {\n\n    }\n\n    async handleDelete(className) {\n\n    }\n\n    async componentDidMount() {\n        await this.getEntities();\n    }\n\n    async getEntities() {\n        let resourcePath = '/api/entities';\n        \n        const results = await fetch(resourcePath);\n        const {entities} = await results.json();\n        \n        this.setState({entities});\n    }\n}","import React from 'react';\nimport {controllers} from 'tramway-router-react-strategy';\nimport { Entity } from '../components/pages';\nconst {ReactController} = controllers;\n\nexport default class EntityController extends ReactController {\n    state = {};\n    \n    render() {\n        const {item} = this.state;\n        const {className, baseClassName, fields, code} = item || {};\n\n        return (\n            <Entity\n                className={className}\n                baseClassName={baseClassName}\n                code={code}\n                fields={fields}\n                onSaveField={async fieldItem => await this.handleSaveField(fieldItem)}\n            />\n        )\n    }\n\n    async componentDidMount() {\n        const {className} = this.params;\n        const item = await this.getEntity(className);\n        \n        this.setState({item});\n    }\n\n    async getEntity(className) {\n        const results = await fetch(`/api/entities/${className}`);\n        return await results.json();\n    }\n\n    async handleSaveField(fieldItem) {\n        const {className} = this.params;\n\n        const results = await fetch(`/api/entities/${className}/fields`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(fieldItem),\n        });\n\n        if (!results.ok) {\n            throw new Error(results.status)\n        }\n\n        const item = await this.getEntity(className);\n        \n        this.setState({item});\n    }\n}\n","import React from 'react';\nimport { controllers } from 'tramway-router-react-strategy';\nimport { NotFound } from '../components/pages';\nconst {NotFoundController} = controllers;\n\nexport default class PageNotFoundController extends NotFoundController {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return <NotFound/>\n    }\n}\n","import controllers from './controllers';\nimport router from './router';\n\nexport default {\n    ...controllers,\n    ...router,\n}\n","import {\n    DashboardController,\n    LibrariesController,\n    DependencyInjectionController,\n    DependencyInspectionController,\n    RoutingController,\n    ParametersController,\n    PageNotFoundController,\n    ServicesController,\n    LogsController,\n    EntitiesController,\n    EntityController,\n} from '../../controllers';\n\nimport {withDependencyInjection} from 'tramway-router-react-strategy';\n\nexport default {\n    \"controller.dashboard\": {\n        \"class\": withDependencyInjection(DashboardController),\n        \"constructor\": [],\n    },\n    \"controller.libraries\": {\n        \"class\": withDependencyInjection(LibrariesController),\n        \"constructor\": [],\n    },\n    \"controller.dependency-injection\": {\n        \"class\": withDependencyInjection(DependencyInjectionController),\n        \"constructor\": [],\n    },\n    \"controller.parameters\": {\n        \"class\": withDependencyInjection(ParametersController),\n        \"constructor\": [],\n    },\n    \"controller.services\": {\n        \"class\": withDependencyInjection(ServicesController),\n        \"constructor\": [\n            'service',\n        ],\n    },\n    \"controller.policies\": {\n        \"class\": withDependencyInjection(ServicesController),\n        \"constructor\": [\n            'policy',\n        ],\n    },\n    \"controller.controllers\": {\n        \"class\": withDependencyInjection(ServicesController),\n        \"constructor\": [\n            'controller',\n        ],\n    },\n    \"controller.repositories\": {\n        \"class\": withDependencyInjection(ServicesController),\n        \"constructor\": [\n            'repository',\n        ],\n    },\n    \"controller.factories\": {\n        \"class\": withDependencyInjection(ServicesController),\n        \"constructor\": [\n            'factory',\n        ],\n    },\n    \"controller.entities\": {\n        \"class\": withDependencyInjection(EntitiesController),\n        \"constructor\": [\n            'entity',\n        ],\n    },\n    \"controller.entity\": {\n        \"class\": withDependencyInjection(EntityController),\n        \"constructor\": [\n            'entity',\n        ],\n    },\n    \"controller.providers\": {\n        \"class\": withDependencyInjection(ServicesController),\n        \"constructor\": [\n            'provider',\n        ],\n    },\n    \"controller.dependency-inspection\": {\n        \"class\": withDependencyInjection(DependencyInspectionController),\n        \"constructor\": [],\n    },\n    \"controller.routing\": {\n        \"class\": withDependencyInjection(RoutingController),\n        \"constructor\": [],\n    },\n    \"controller.logs\": {\n        \"class\": withDependencyInjection(LogsController),\n        \"constructor\": [],\n    },\n    \"controller.not_found\": {\n        \"class\": withDependencyInjection(PageNotFoundController),\n        \"constructor\": [\n\n        ],\n    },\n}\n","import {Router} from 'tramway-core-router';\nimport ReactRouterStrategy from 'tramway-router-react-strategy';\nimport {app} from '../../App';\n\nexport default {\n    \"router\": {\n        \"class\": Router,\n        \"constructor\": [\n            {\"type\": \"parameter\", \"key\": \"routes\"},\n            {\"type\": \"service\", \"key\": \"react-router-strategy\"},\n            app('dashboard').getDependencyResolver(),\n        ],\n    },\n    \"react-router-strategy\": {\n        \"class\": ReactRouterStrategy,\n        \"constructor\": [],\n        \"functions\": []\n    }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Lets check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://goo.gl/SC7cgQ'\n            );\n          });\n        } else {\n          // Is not local host. Just register service worker\n          registerValidSW(swUrl);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        if (\n          response.status === 404 ||\n          response.headers.get('content-type').indexOf('javascript') === -1\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }\n  ","import ReactDOM from 'react-dom';\nimport App from './App';\nimport * as parameters from './config/parameters';\nimport services from './config/services';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst app = App.initialize('dashboard', services, parameters);\nconst router = app.getDependencyResolver().getService('router').initialize();\n\nReactDOM.render(router, document.getElementById('root'));\nregisterServiceWorker();"],"sourceRoot":""}