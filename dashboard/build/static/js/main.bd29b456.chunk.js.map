{"version":3,"sources":["App.js","config/parameters/global/routes.js","components/buttons/AppToggle/AppToggle.js","components/buttons/AppToggle/index.js","components/layout/Menu/index.js","components/layout/Menu/Menu.js","components/layout/Sidebar/index.js","components/layout/Sidebar/Sidebar.js","components/layout/Page/index.js","components/layout/Page/Page.js","components/pages/Dashboard/index.js","components/pages/Dashboard/Dashboard.js","components/lists/InstalledLibraries/index.js","components/lists/InstalledLibraries/InstalledLibraries.js","components/lists/Routes/index.js","components/lists/Routes/Routes.js","components/items/JSONFormatter/index.js","components/items/JSONFormatter/JSONFormatter.js","components/lists/DependenciesList/index.js","components/lists/DependenciesList/DependenciesList.js","components/lists/ParametersList/index.js","components/lists/ParametersList/ParametersList.js","components/lists/FunctionsList/index.js","components/lists/FunctionsList/FunctionsList.js","components/pages/Libraries/Libraries.js","components/pages/Libraries/index.js","components/pages/Routing/index.js","components/pages/Routing/Routing.js","components/pages/Dependencies/index.js","components/pages/Dependencies/Dependencies.js","components/pages/Dependency/index.js","components/pages/Dependency/Dependency.js","components/pages/Parameters/index.js","components/pages/Parameters/Parameters.js","components/pages/Services/index.js","components/pages/Services/Services.js","components/pages/Logs/Logs.js","components/pages/Logs/index.js","components/pages/NotFound/index.js","components/pages/NotFound/NotFound.js","controllers/DashboardController.js","controllers/LibrariesController.js","controllers/DependencyInjectionController.js","controllers/DependencyInspectionController.js","controllers/RoutingController.js","controllers/ParametersController.js","controllers/ServicesController.js","controllers/LogsController.js","controllers/PageNotFoundController.js","config/services/index.js","config/services/controllers.js","config/services/router.js","registerServiceWorker.js","index.js"],"names":["manager","Map","App","name","this","instance","get","set","services","parameters","di","createDependencyResolver","initialize","getService","start","routesValues","AppToggle","state","status","error","loading","Error","setState","fetch","method","body","JSON","stringify","headers","ok","handleChange","props","results","json","instances","length","setTimeout","a","getApplicationState","Button","icon","getIcon","onClick","handleToggle","Boolean","color","Component","defaultProps","Menu","handleStateChange","inverted","fixed","position","Item","Sidebar","children","style","Pushable","as","animation","vertical","visible","width","Header","link","href","Icon","Pusher","PureComponent","Page","className","Segment","basic","Container","Dashboard","map","system","port","PORT","platform","release","memory","memoryAvailable","uptime","appUsage","cpu","appMemory","elapsed","Content","Subheader","Table","Row","HeaderCell","Body","Cell","isNaN","Number","parseFloat","toFixed","parseInt","target","List","bulleted","items","InstalledLibraries","libraries","updates","Object","entries","library","version","key","size","primary","celled","striped","prepareRows","Routes","routes","baseUrl","values","i","controller","action","path","methods","policy","JSONFormatter","value","data","e","constructor","toString","DependenciesList","dependencies","classDefinition","includes","aria-label","class","prepareConstructorArgs","prepareFunctionsArgs","item","type","Label","Function","functions","ParametersList","placeholder","padded","FunctionsList","functionName","function","args","arg","Libraries","included","fromEntries","filter","hasTarget","prevProps","prevState","devDependencies","Grid","columns","divided","Column","Routing","file","Dependencies","Dependency","serviceConfig","Parameters","Services","Logs","logs","Array","from","menuItem","render","Tab","Pane","attached","date","message","level","stack","log","panes","prepareLogSections","menu","secondary","pointing","NotFound","DashboardController","undefined","clearInterval","poller","getSystemStats","setInterval","controllers","ReactController","LibrariesController","DependencyInjectionController","getDependencyInjection","DependencyInspectionController","params","RoutingController","getRouting","getBaseUrl","ParametersController","ServicesController","resourcePath","querystring","encode","LogsController","getLogs","PageNotFoundController","NotFoundController","withDependencyInjection","Router","app","getDependencyResolver","ReactRouterStrategy","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","console","catch","router","ReactDOM","document","getElementById","URL","process","origin","addEventListener","response","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.bd29b456.chunk.js","sourcesContent":["import {createDependencyResolver} from '@tramwayjs/dependency-injector';\n\nvar manager = new Map();\n\nexport default class App {\n    constructor(name) {\n        this.name = name;\n        const instance = manager.get(name);\n\n        if (instance) {\n            return instance;\n        }\n\n        manager.set(name, this);\n    }\n\n    static initialize(name, services, parameters) {\n        return new App(name).initialize(services, parameters);\n    }\n    \n    initialize(services, parameters) {\n        this.di = createDependencyResolver(this.name).initialize(services, parameters);\n        return this;\n    }\n\n    start() {\n        let app = this.di.getService('app');\n        return app.initialize().start();\n    }\n\n    getDependencyResolver() {\n        return this.di || createDependencyResolver(this.name);\n    }\n}\n\nexport function app(name) {\n    const instance = manager.get(name);\n\n    if (instance) {\n        return instance;\n    }\n\n    return new App(name);\n}","const routesValues = [\n    {\n        \"methods\": [\"get\"],\n        \"controller\": 'controller.dashboard',\n        \"title\": \"Home\",\n    },\n    {\n        \"methods\": [\"get\"],\n        \"controller\": \"controller.libraries\",\n        \"action\": \"index\",\n        \"path\": \"libraries\",\n    },\n    {\n        \"controller\": \"controller.routing\",\n        \"methods\": [\"get\"],\n        \"path\": \"routing\",\n    },\n    {\n        \"controller\": \"controller.dependency-injection\",\n        \"methods\": [\"get\"],\n        \"path\": \"dependency-injection\",\n    },\n    {\n        \"controller\": \"controller.parameters\",\n        \"methods\": [\"get\"],\n        \"path\": \"parameters\",\n    },\n    {\n        \"controller\": \"controller.policies\",\n        \"methods\": [\"get\"],\n        \"path\": \"policies\",\n    },\n    {\n        \"controller\": \"controller.services\",\n        \"methods\": [\"get\"],\n        \"path\": \"services\",\n    },\n    {\n        \"controller\": \"controller.controllers\",\n        \"methods\": [\"get\"],\n        \"path\": \"controllers\",\n    },\n    {\n        \"controller\": \"controller.repositories\",\n        \"methods\": [\"get\"],\n        \"path\": \"repositories\",\n    },\n    {\n        \"controller\": \"controller.factories\",\n        \"methods\": [\"get\"],\n        \"path\": \"factories\",\n    },\n    {\n        \"controller\": \"controller.dependency-inspection\",\n        \"path\": \"services/:key\",\n        \"methods\": [\"get\"],\n    },\n    {\n        \"controller\": \"controller.providers\",\n        \"methods\": [\"get\"],\n        \"path\": \"providers\",\n    },\n    {\n        \"controller\": \"controller.dependency-inspection\",\n        \"path\": \"providers/:key\",\n        \"methods\": [\"get\"],\n    },\n    {\n        \"controller\": \"controller.dependency-inspection\",\n        \"path\": \"dependency-injection/:key\",\n        \"methods\": [\"get\"],\n    },\n    {\n        \"controller\": \"controller.logs\",\n        \"path\": \"logs\",\n        \"methods\": [\"get\"],\n    },\n    {\n        \"controller\": 'controller.not_found',\n        \"methods\": [\"get\"],\n        \"path\": \"*\",\n    },\n];\n\nexport default routesValues;","import React, {Component} from 'react';\nimport { Button } from 'semantic-ui-react';\n\nexport default class AppToggle extends Component {\n    state = {\n        status: 'stopped',\n        error: false,\n        loading: false,\n    }\n\n    static defaultProps = {\n        handleChange: status => status,\n    }\n\n    static getIcon(status) {\n        switch(status) {\n            case 'active': return 'stop';\n            case 'stopped': return 'play';\n        }\n    }\n\n    async handleToggle(status) {\n        let state;\n\n        switch(status) {\n            case 'active': state = 'stopped'; break;\n            case 'stopped': state = 'active'; break;\n            default: throw new Error('Invalid status');\n        }\n\n        this.setState({loading: true})\n\n        let response = await fetch('http://localhost:8000/api/state', {\n            method: 'PATCH',\n            body: JSON.stringify({state}),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n\n        if (!response.ok) {\n            this.setState({error: true, loading: false})\n        }\n\n        this.setState({status: state, error: false, loading: false}, () => {\n            const {status} = this.state;\n            const {handleChange} = this.props;\n            return handleChange(status);\n        });\n    }\n\n    async getApplicationState() {\n        const results = await fetch('/api/state');\n        const {instances = []} = await results.json();\n        \n        this.setState({status: instances.length ? 'active' : 'stopped'});\n    }\n\n    async componentDidMount() {\n        setTimeout(async () => {\n            try {\n                await this.getApplicationState();\n            } catch(e) {\n                \n            }\n        }, 10);\n    }\n\n    render() {\n        const {status, error, loading} = this.state;\n\n        return (\n            <Button \n                icon={AppToggle.getIcon(status)} \n                onClick={async () => await this.handleToggle(status)} \n                error={Boolean(error)} \n                loading={loading}\n                color={'stopped' === status ? 'green': 'red'}\n            />\n        )\n    }\n}","import AppToggle from './AppToggle';\n\nexport default AppToggle;","import Menu from './Menu';\n\nexport default Menu;","import React, {Component} from 'react';\nimport { Menu as SemanticMenu } from \"semantic-ui-react\";\nimport { AppToggle } from '../../buttons';\n\nexport default class Menu extends Component {\n    render() {\n        const {handleStateChange} = this.props;\n\n        return (\n            <SemanticMenu inverted fixed=\"top\">\n                <SemanticMenu.Menu position=\"right\">\n                    <SemanticMenu.Item>\n                        <AppToggle handleChange={handleStateChange}/>\n                    </SemanticMenu.Item>\n                </SemanticMenu.Menu>\n            </SemanticMenu>\n        )\n    }\n}","import Sidebar from './Sidebar';\n\nexport default Sidebar;","import React, { PureComponent } from 'react';\nimport { Sidebar as SemanticSidebar, Menu, Icon } from \"semantic-ui-react\";\n\nexport default class Sidebar extends PureComponent {\n    render() {\n        const {children, style} = this.props;\n\n        return (\n            <SemanticSidebar.Pushable style={style}>\n                <SemanticSidebar\n                    as={Menu}\n                    animation='overlay'\n                    icon='labeled'\n                    inverted\n                    vertical\n                    visible\n                    width='thin'                        \n                >\n                    <Menu.Header>\n                        <Menu.Item icon=\"home\" link href=\"/\"/>\n                    </Menu.Header>\n                    <Menu.Item link href=\"/libraries\">\n                        <Icon name='npm' />\n                        Libraries\n                    </Menu.Item>\n                    <Menu.Item link href=\"/parameters\">\n                        <Icon name='settings' />\n                        Parameters\n                    </Menu.Item>\n                    <Menu.Item link href=\"/routing\">\n                        <Icon name='sitemap' />\n                        Routes\n                    </Menu.Item>\n                    <Menu.Item link href=\"/policies\">\n                        <Icon name='shield alternate' />\n                        Policies\n                    </Menu.Item>\n                    <Menu.Item link href=\"/controllers\">\n                        <Icon name='tasks' />\n                        Controllers\n                    </Menu.Item>\n                    <Menu.Item link href=\"/services\">\n                        <Icon name='file code' />\n                        Services\n                    </Menu.Item>\n                    <Menu.Item link href=\"/repositories\">\n                        <Icon name='database' />\n                        Repositories\n                    </Menu.Item>\n                    <Menu.Item link href=\"/factories\">\n                        <Icon name='factory' />\n                        Factories\n                    </Menu.Item>\n                    <Menu.Item link href=\"/providers\">\n                        <Icon name='database' />\n                        Providers\n                    </Menu.Item>\n                    <Menu.Item link href=\"/logs\">\n                        <Icon name='bug' />\n                        Logs\n                    </Menu.Item>\n                    <Menu.Item link href=\"/docs\">\n                        <Icon name='question circle outline' />\n                        Documentation\n                    </Menu.Item>\n                </SemanticSidebar>\n                <SemanticSidebar.Pusher>\n                    {children}\n                </SemanticSidebar.Pusher>\n            </SemanticSidebar.Pushable>\n        );\n    }\n}","import Page from './Page';\n\nexport default Page;","import React, {Component} from 'react';\nimport Menu from \"../Menu\";\nimport Sidebar from '../Sidebar';\nimport { Container, Segment } from \"semantic-ui-react\";\nimport './styles.css';\n\nexport default class Page extends Component {\n    render() {\n        const {handleStateChange, children} = this.props;\n        \n        return (\n            <div>\n                <Sidebar className=\"page sidebar\">\n                    <Menu handleStateChange={handleStateChange}/>\n                    <Segment basic className=\"page frame\">\n                        <Container className=\"page content\">\n                            {children}\n                        </Container>\n                    </Segment>\n                </Sidebar>\n            </div>\n        );\n    }\n}","import Dashboard from './Dashboard';\n\nexport default Dashboard;","import { Page } from '../../layout';\nimport React, {Component} from 'react';\nimport { Header, Table, List } from 'semantic-ui-react';\n\nexport default class Dashboard extends Component {\n    prepareInstances(instances) {\n        return instances.map(instance => <li>{instance}</li>);\n    }\n\n    render() {\n        const {parameters = {}, instances = [], system = {}} = this.props;\n        let {port, PORT} = parameters;\n\n        if (!port) {\n            port = PORT;\n        }\n\n        const {platform, release, memory, memoryAvailable, uptime} = system.system || {};\n        const {cpu, memory: appMemory, elapsed} = system.appUsage || {};\n        \n        return (\n            <Page>\n                <Header as=\"h2\">\n                    <Header.Content>\n                        Welcome to Tramway Manager\n                        <Header.Subheader>Manage Tramway's various components and dependencies here</Header.Subheader>\n                    </Header.Content>\n                </Header>\n\n                <Header as=\"h3\">\n                    System Stats\n                </Header>\n\n                <Table>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>Platform</Table.HeaderCell>\n                            <Table.HeaderCell>Release</Table.HeaderCell>\n                            <Table.HeaderCell>Memory</Table.HeaderCell>\n                            <Table.HeaderCell>Memory Available</Table.HeaderCell>\n                            <Table.HeaderCell>Memory Used</Table.HeaderCell>\n                            <Table.HeaderCell>CPU Used</Table.HeaderCell>\n                            <Table.HeaderCell>App Uptime</Table.HeaderCell>\n                            <Table.HeaderCell>System Uptime</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        <Table.Row>\n                            <Table.Cell>{platform}</Table.Cell>\n                            <Table.Cell>{release}</Table.Cell>\n                            <Table.Cell>{!isNaN(memory) ? `${Number.parseFloat(memory/1024/1024/1024).toFixed(2)} GB` : ''}</Table.Cell>\n                            <Table.Cell>{!isNaN(memoryAvailable) ? `${Number.parseFloat(memoryAvailable/1024/1024/1024).toFixed(2)} GB` : ''}</Table.Cell>\n                            <Table.Cell>{!isNaN(appMemory) ? `${Number.parseFloat(appMemory/1024/1024/1024).toFixed(2)} GB` : ''}</Table.Cell>\n                            <Table.Cell>{!isNaN(cpu) ? `${cpu} %` : ''}</Table.Cell>\n                            <Table.Cell>{!isNaN(elapsed) ? `${Number.parseInt(elapsed/60/1000)} min` : ''}</Table.Cell>\n                            <Table.Cell>{!isNaN(uptime) ? `${Number.parseInt(uptime/60)} min` : ''}</Table.Cell>\n                        </Table.Row>\n                    </Table.Body>\n                </Table>\n\n                <Header as=\"h3\">\n                    Project Details\n                </Header>\n\n                <Table>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>Attribute</Table.HeaderCell>\n                            <Table.HeaderCell>Value</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        <Table.Row>\n                            <Table.Cell>Port</Table.Cell>\n                            <Table.Cell><a href={`http://localhost:${port}/`} target=\"_blank\">{port}</a></Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell>Instances</Table.Cell>\n                            <Table.Cell>\n                                <List bulleted items={instances}/>\n                            </Table.Cell>\n                        </Table.Row>\n                    </Table.Body>\n                </Table>\n\n            </Page>\n        )\n    }\n}","import InstalledLibraries from './InstalledLibraries';\n\nexport default InstalledLibraries;","import React, {Component} from 'react';\nimport { Table, Button } from \"semantic-ui-react\";\n\nexport default class InstalledLibraries extends Component {\n    prepareRows() {\n        const {libraries, updates} = this.props;\n\n        return Object.entries(libraries).map(([library, version]) => (\n            <Table.Row key={library}>\n                <Table.Cell>{library}</Table.Cell>\n                <Table.Cell>{version}</Table.Cell>\n                <Table.Cell>{updates[library]}</Table.Cell>\n                <Table.Cell><Button size=\"mini\" primary>Update</Button></Table.Cell>\n            </Table.Row>\n        ))\n    }\n\n    render() {\n        return (\n            <Table celled striped>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Module</Table.HeaderCell>\n                        <Table.HeaderCell>Version</Table.HeaderCell>\n                        <Table.HeaderCell>Latest Version</Table.HeaderCell>\n                        <Table.HeaderCell></Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {this.prepareRows()}\n                </Table.Body>\n            </Table>\n        )\n    }\n}","import Routes from './Routes';\n\nexport default Routes;","import React, {Component} from 'react';\nimport { Table } from \"semantic-ui-react\";\n\nexport default class Routes extends Component {\n    prepareRows() {\n        const {routes = [], baseUrl = ''} = this.props;\n\n        return Object.values(routes).map(({controller, action, path = '', methods, policy = 'None'}, i) => (\n            <Table.Row key={i}>\n                <Table.Cell><a href={`${baseUrl}/${path}`} target=\"_blank\">{`/${path}`}</a></Table.Cell>\n                <Table.Cell className=\"uppercase\">{methods}</Table.Cell>\n                <Table.Cell><a href={`/dependency-injection/${controller}`}>{controller}</a></Table.Cell>\n                <Table.Cell>{action}</Table.Cell>\n                <Table.Cell>{policy}</Table.Cell>\n            </Table.Row>\n        ))\n    }\n\n    render() {\n        return (\n            <Table celled striped>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Path</Table.HeaderCell>\n                        <Table.HeaderCell>HTTP Method</Table.HeaderCell>\n                        <Table.HeaderCell>Controller</Table.HeaderCell>\n                        <Table.HeaderCell>Action</Table.HeaderCell>\n                        <Table.HeaderCell>Policy</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {this.prepareRows()}\n                </Table.Body>\n            </Table>\n        )\n    }\n}","import JSONFormatter from './JSONFormatter';\n\nexport default JSONFormatter;","import React, {Component} from 'react';\n\nexport default class JSONFormatter extends Component {\n    render() {\n        const {data, className} = this.props;\n        let value;\n\n        try {\n            value = JSON.stringify(data, null, 2)\n        } catch(e) {\n            if (data.constructor) {\n                value = data.constructor.name;\n            } else {\n                value = data.toString();\n            }\n        }\n\n        return (\n            <div className={className}>\n                <pre>{value}</pre>\n            </div>\n        )\n    }\n}","import DependenciesList from './DependenciesList';\n\nexport default DependenciesList;","import React, {Component} from 'react';\nimport { Table, Icon, Label } from \"semantic-ui-react\";\nimport { JSONFormatter } from \"../../items\";\n\nexport default class DependenciesList extends Component {\n    prepareRows() {\n        const {dependencies = {}, instances = []} = this.props;\n        const items = Object.entries(dependencies);\n\n        if (!items.length) {\n            return (\n                <Table.Row>\n                    <Table.Cell>No dependencies found</Table.Cell>\n                </Table.Row>\n            );\n        }\n\n        return items.map(([key, classDefinition]) => (\n            <Table.Row key={key}>\n                <Table.Cell>\n                    {instances.includes(key) && <Icon color=\"green\" name=\"check circle\" aria-label=\"The instance has been created and the service is being used\" link/>}\n                </Table.Cell>\n                <Table.Cell><a href={`/dependency-injection/${key}`}>{key}</a></Table.Cell>\n                <Table.Cell>{classDefinition.class}</Table.Cell>\n                <Table.Cell><ol>{this.prepareConstructorArgs(classDefinition)}</ol></Table.Cell>\n                <Table.Cell>{this.prepareFunctionsArgs(classDefinition)}</Table.Cell>\n            </Table.Row>\n        ))\n    }\n\n    prepareConstructorArgs(classDefinition) {\n        const constructorArgs = classDefinition.constructor;\n\n        return constructorArgs.map(item => {\n            const {type, key} = item;\n\n            if (type && key) {\n                return <li><a href={`/dependency-injection/${key}`}>{key} <Label size=\"tiny\">{type}</Label></a></li>\n            }\n\n            if (item instanceof Function) {\n                return <li>{item.name}()</li>\n            }\n\n            try {\n                return <li><JSONFormatter data={item}/></li>\n            } catch(e) {\n                if (item instanceof Object) {\n                    return <li>{item.constructor.name}</li>\n                }\n            }\n\n            return <li>{item.toString()}</li>\n        })\n    }\n    \n    prepareFunctionsArgs(classDefinition) {\n        return classDefinition.functions ? classDefinition.functions.length : 0\n    }\n\n    render() {\n        return (\n            <Table celled striped>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell></Table.HeaderCell>\n                        <Table.HeaderCell>Key</Table.HeaderCell>\n                        <Table.HeaderCell>Class</Table.HeaderCell>\n                        <Table.HeaderCell>Constructor</Table.HeaderCell>\n                        <Table.HeaderCell>Function Calls</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {this.prepareRows()}\n                </Table.Body>\n            </Table>\n        )\n    }\n}","import ParametersList from './ParametersList';\n\nexport default ParametersList;","import React, {Component} from 'react';\nimport { Table, Segment } from \"semantic-ui-react\";\nimport { JSONFormatter } from \"../../items\";\n\nexport default class ParametersList extends Component {\n    prepareRows() {\n        const {parameters = {}} = this.props;\n        const items = parameters ? Object.entries(parameters) : [];\n\n        if (!items.length) {\n            return (\n                <Table.Row>\n                    <Table.Cell>No parameters found</Table.Cell>\n                </Table.Row>\n            );\n        }\n\n        return items.map(([key, value]) => {\n            if (value instanceof Function) {\n                value = `${value.name}()`;\n            } \n            \n            if (value instanceof Object) {\n                value = <Segment placeholder size=\"small\" padded={false}><JSONFormatter data={value}/></Segment>\n            }\n\n            return (\n                <Table.Row key={key}>\n                    <Table.Cell>{key}</Table.Cell>\n                    <Table.Cell>{value}</Table.Cell>\n                </Table.Row>\n            )\n        })\n    }\n\n    render() {\n        return (\n            <Table celled striped>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Key</Table.HeaderCell>\n                        <Table.HeaderCell>Value</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {this.prepareRows()}\n                </Table.Body>\n            </Table>\n        )\n    }\n}","import FunctionsList from './FunctionsList';\n\nexport default FunctionsList;","import React, {Component} from 'react';\nimport { Table } from \"semantic-ui-react\";\n\nexport default class FunctionsList extends Component {\n    prepareRows() {\n        const {functions = []} = this.props;\n\n        if (!functions.length) {\n            return (\n                <Table.Row>\n                    <Table.Cell>No functions found</Table.Cell>\n                </Table.Row>\n            );\n        }\n\n        return functions.map(({function: functionName, args = []}, i) => (\n            <Table.Row key={`${functionName}${i}`}>\n                <Table.Cell>{functionName}</Table.Cell>\n                <Table.Cell>\n                    <ol>\n                        {args.map(arg => {\n                            if (arg instanceof Function) {\n                                return <li>{arg.name}</li>;\n                            }\n\n                            if (arg instanceof Object) {\n                                return <li>{arg.constructor.name}</li>\n                            }\n\n                            return <li>{arg.toString()}</li>;\n                        })}\n                    </ol>\n                </Table.Cell>\n            </Table.Row>\n        ))\n    }\n\n    render() {\n        return (\n            <Table celled striped>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Function</Table.HeaderCell>\n                        <Table.HeaderCell>Arguments</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {this.prepareRows()}\n                </Table.Body>\n            </Table>\n        )\n    }\n}","import React, {Component} from 'react';\nimport { Page } from \"../../layout\";\nimport { InstalledLibraries } from \"../../lists\";\nimport { Header, Grid, Segment } from \"semantic-ui-react\";\n\nexport default class Libraries extends Component {\n    static defaultProps = {\n        dependencies: [],\n        devDependencies: [],\n        updates: [],\n    };\n\n    state = {\n        loading: true,\n    }\n\n    filter(dependencies, target, included = true) {\n        return Object.fromEntries(\n            Object\n                .entries(dependencies)\n                .filter(\n                    ([library]) => {\n                        const hasTarget = library.includes(target);\n\n                        return (!included || hasTarget) && !(!included && hasTarget);\n                    }\n                )\n        );\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const {dependencies, devDependencies, updates} = this.props;\n\n        if (prevProps.dependencies === dependencies && prevProps.devDependencies === devDependencies && prevProps.updates === updates) {\n            return;\n        }\n\n        this.setState({loading: false})\n    }\n\n    render() {\n        const {dependencies, devDependencies, updates} = this.props;\n        const {loading} = this.state;\n        \n        return (\n            <Page>\n                <Grid columns={2} divided>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Header as='h2'>Tramway Dependencies</Header>\n                                <Segment basic vertical loading={loading}>\n                                    <InstalledLibraries libraries={this.filter(dependencies, 'tramway')} updates={this.filter(updates, 'tramway')}/>\n                                </Segment>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Header as='h2'>External Dependencies</Header>\n                            <Segment basic vertical loading={loading}>\n                                <InstalledLibraries libraries={this.filter(dependencies, 'tramway', false)} updates={this.filter(updates, 'tramway', false)}/>\n                            </Segment>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Header as='h2'>Babel Dependencies</Header>\n                            <Segment basic vertical loading={loading}>\n                                <InstalledLibraries libraries={this.filter(devDependencies, 'babel')} updates={this.filter(updates, 'babel')}/>\n                            </Segment>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Header as='h2'>Development Dependencies</Header>\n                            <Segment basic vertical loading={loading}>\n                                <InstalledLibraries libraries={this.filter(devDependencies, 'babel', false)} updates={this.filter(updates, 'babel', false)}/>\n                            </Segment>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Page>\n        )\n    }\n}","import Libraries from './Libraries';\n\nexport default Libraries;","import Routing from './Routing';\nexport default Routing;","import React, {Component} from 'react';\nimport { Page } from \"../../layout\";\nimport { Routes } from \"../../lists\";\nimport { Segment, Header } from 'semantic-ui-react';\n\nexport default class Routing extends Component {\n    state = {\n        loading: true,\n    }\n\n    render() {\n        const {file, routes, baseUrl} = this.props;\n        const {loading} = this.state;\n\n        return (\n            <Page>\n                <Header as='h2'>Routes</Header>\n                {file}\n                <Segment basic vertical loading={loading}>\n                    <Routes routes={routes} baseUrl={baseUrl}/>\n                </Segment>\n            </Page>\n        )\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const {file, routes} = this.props;\n\n        if (prevProps.file === file && prevProps.routes === routes) {\n            return;\n        }\n\n        this.setState({loading: false})\n    }\n}","import Dependencies from './Dependencies';\nexport default Dependencies;","import React, {Component} from 'react';\nimport { Page } from \"../../layout\";\nimport { DependenciesList, ParametersList } from \"../../lists\";\nimport { Header, Segment } from \"semantic-ui-react\";\n\nexport default class Dependencies extends Component {\n    state = {\n        loading: true,\n    }\n    \n    render() {\n        const {services, parameters, instances, handleStateChange} = this.props;\n        const {loading} = this.state;\n\n        return (\n            <Page handleStateChange={handleStateChange}>\n                <Header as='h2'>Parameters</Header>\n                <Segment basic vertical loading={loading}>\n                    <ParametersList parameters={parameters}/>\n                </Segment>\n\n                <Header as='h2'>Services</Header>\n                <Segment basic vertical loading={loading}>\n                    <DependenciesList dependencies={services} instances={instances}/>\n                </Segment>\n            </Page>\n        )\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const {services, parameters, instances} = this.props;\n\n        if (prevProps.services === services && prevProps.parameters === parameters && prevProps.instances === instances) {\n            return;\n        }\n\n        this.setState({loading: false})\n    }\n}","import Dependency from './Dependency';\nexport default Dependency;","import React, {Component} from 'react';\nimport { Page } from \"../../layout\";\nimport { DependenciesList, ParametersList, FunctionsList } from \"../../lists\";\nimport { Header, Segment } from \"semantic-ui-react\";\nimport { JSONFormatter } from \"../../items\";\n\nexport default class Dependency extends Component {\n    state = {\n        loading: true,\n    }\n\n    render() {\n        const {className, services, parameters, functions, serviceConfig} = this.props;\n        const {loading} = this.state;\n\n        return (\n            <Page>\n                <Header as=\"h2\">{className}</Header>\n                <Header as=\"h3\">Dependencies</Header>\n                <Segment basic vertical loading={loading}>\n                    <DependenciesList dependencies={services}/>\n                </Segment>\n\n                <Header as=\"h3\">Parameters</Header>\n                <Segment basic vertical loading={loading}>\n                    <ParametersList parameters={parameters}/>\n                </Segment>\n\n                <Header as=\"h3\">Function Calls</Header>\n                <Segment basic vertical loading={loading}>\n                    <FunctionsList functions={functions}/>\n                </Segment>\n\n                <Header as=\"h3\">Declaration</Header>\n                <Segment placeholder loading={loading}>\n                    <JSONFormatter data={serviceConfig}/>\n                </Segment>\n            </Page>\n        )\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const {className, services, parameters, functions, serviceConfig} = this.props;\n\n        if (prevProps.className === className && prevProps.services === services && prevProps.parameters === parameters && prevProps.functions === functions && prevProps.serviceConfig === serviceConfig) {\n            return;\n        }\n\n        this.setState({loading: false})\n    }\n}","import Parameters from './Parameters';\n\nexport default Parameters;","import React, {Component} from 'react';\nimport { Page } from \"../../layout\";\nimport { ParametersList } from \"../../lists\";\nimport { Header, Segment } from \"semantic-ui-react\";\n\nexport default class Parameters extends Component {\n    state = {\n        loading: true,\n    }\n    \n    render() {\n        const {parameters, handleStateChange} = this.props;\n        const {loading} = this.state;\n\n        return (\n            <Page handleStateChange={handleStateChange}>\n                <Header as='h2'>Parameters</Header>\n                <Segment basic vertical loading={loading}>\n                    <ParametersList parameters={parameters}/>\n                </Segment>\n            </Page>\n        )\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const {parameters} = this.props;\n\n        if (prevProps.parameters === parameters) {\n            return;\n        }\n\n        this.setState({loading: false})\n    }\n}","import Services from './Services';\n\nexport default Services;","import React, {Component} from 'react';\nimport { Page } from \"../../layout\";\nimport { DependenciesList } from \"../../lists\";\nimport { Header, Segment } from \"semantic-ui-react\";\n\nexport default class Services extends Component {\n    state = {\n        loading: true,\n    }\n    \n    render() {\n        const {services, instances, handleStateChange} = this.props;\n        const {loading} = this.state;\n\n        return (\n            <Page handleStateChange={handleStateChange}>\n                <Header as='h2'>Services</Header>\n                <Segment basic vertical loading={loading}>\n                    <DependenciesList dependencies={services} instances={instances}/>\n                </Segment>\n            </Page>\n        )\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const {services, parameters, instances} = this.props;\n\n        if (prevProps.services === services && prevProps.instances === instances) {\n            return;\n        }\n\n        this.setState({loading: false})\n    }\n}","import React, {Component} from 'react';\nimport { Page } from \"../../layout\";\nimport { Table, Tab, Segment } from \"semantic-ui-react\";\nimport { JSONFormatter } from '../../items';\n\nimport './styles.css'\n\nexport default class Logs extends Component {\n    static defaultProps = {\n        logs: {},\n    };\n\n    prepareLogSections(logs = {}) {\n        return Array.from(Object.entries(logs)).map(([file, logs]) => (\n            {\n                menuItem: file,\n                render: () => (\n                    <Tab.Pane attached={false} basic>\n                        <Table>\n                            <Table.Header>\n                                <Table.Row>\n                                    <Table.HeaderCell>Timestamp</Table.HeaderCell>\n                                    <Table.HeaderCell>Level</Table.HeaderCell>\n                                    <Table.HeaderCell>Message</Table.HeaderCell>\n                                    <Table.HeaderCell>Stack</Table.HeaderCell>\n                                    <Table.HeaderCell>JSON</Table.HeaderCell>\n                                </Table.Row>\n                            </Table.Header>\n                            <Table.Body>\n                                {logs.map(({date, message, level, stack, ...log}) => (\n                                    <Table.Row>\n                                        <Table.Cell>{date}</Table.Cell>\n                                        <Table.Cell>{level}</Table.Cell>\n                                        <Table.Cell>{message}</Table.Cell>\n                                        <Table.Cell>{stack}</Table.Cell>\n                                        <Table.Cell><Segment placeholder size=\"small\" padded={false}><JSONFormatter data={log} className=\"page logs\"/></Segment></Table.Cell>\n                                    </Table.Row>\n                                ))}\n                            </Table.Body>\n                        </Table>\n                    </Tab.Pane>\n                )\n            }\n        ))\n    }\n\n    render() {\n        const {logs} = this.props;\n        \n        return (\n            <Page>\n                <Tab\n                    panes={this.prepareLogSections(logs)}\n                    menu={{secondary: true, pointing: true}}\n                />\n            </Page>\n        )\n    }\n}","import Logs from './Logs';\n\nexport default Logs;","import NotFound from './NotFound';\n\nexport default NotFound;","import React, { PureComponent } from 'react';\nimport { Page } from \"../../layout\";\n\nexport default class NotFound extends PureComponent {\n    render() {\n        return (\n            <Page>\n                The route you're looking for could not be found.\n            </Page>\n        );\n    }\n}\n","import React from 'react';\nimport {controllers} from 'tramway-router-react-strategy';\nimport {Dashboard} from '../components/pages';\nconst {ReactController} = controllers;\n\nexport default class DashboardController extends ReactController {  \n    state = {};\n\n    async getApplicationState() {\n        try {\n            const results = await fetch('/api/state');\n            const {parameters, instances} = await results.json();\n            \n            this.setState({parameters, instances});\n        } catch(e) {\n            this.setState({parameters: undefined, instances: undefined})\n        }\n    }\n\n    async getSystemStats() {\n        try {\n            const results = await fetch('/api/system');\n            const system = await results.json();\n            \n            this.setState({system});\n        } catch(e) {\n            this.setState({system: undefined});\n            clearInterval(this.poller);\n        }\n    }\n\n    async componentDidMount() {\n        await this.getApplicationState();\n        await this.getSystemStats();\n\n        this.poller = setInterval(async () => {\n            await this.getSystemStats();\n        }, 6000)\n    }\n\n    render() {\n        const {parameters, instances, system} = this.state;\n        return <Dashboard parameters={parameters} instances={instances} system={system}/>\n    }\n}\n","import React from 'react';\nimport {controllers} from 'tramway-router-react-strategy';\nimport {Libraries} from '../components/pages';\nconst {ReactController} = controllers;\n\nexport default class LibrariesController extends ReactController {\n    state = {};\n    \n    render() {\n        const {dependencies, devDependencies, updates} = this.state;\n\n        return <Libraries dependencies={dependencies} devDependencies={devDependencies} updates={updates}/>\n    }\n\n    async componentDidMount() {\n        const results = await fetch('/api/libraries');\n        const {dependencies, devDependencies, updates} = await results.json();\n        \n        this.setState({dependencies, devDependencies, updates});\n    }\n}\n","import React from 'react';\nimport {controllers} from 'tramway-router-react-strategy';\nimport {Dependencies} from '../components/pages';\nconst {ReactController} = controllers;\n\nexport default class DependencyInjectionController extends ReactController {\n    state = {};\n\n    async handleStateChange(state) {\n        if (state === this.state.state) {\n            return;\n        }\n\n        setTimeout(async () => await this.getDependencyInjection(), 3000)\n    }\n    \n    render() {\n        const {services, parameters, instances} = this.state;\n\n        return (\n            <Dependencies\n                services={services}\n                parameters={parameters}\n                instances={instances}\n                handleStateChange={async state => await this.handleStateChange(state)}\n            />\n        )\n    }\n\n    async componentDidMount() {\n        await this.getDependencyInjection();\n    }\n\n    async getDependencyInjection() {\n        const results = await fetch('/api/dependency-injection');\n        const {services, parameters, instances} = await results.json();\n        \n        this.setState({services, parameters, instances});\n    }\n}","import React from 'react';\nimport {controllers} from 'tramway-router-react-strategy';\nimport {Dependency} from '../components/pages';\nconst {ReactController} = controllers;\n\nexport default class DependencyInspectionController extends ReactController {\n    state = {};\n    \n    render() {\n        const {className, services, functions, parameters, serviceConfig} = this.state;\n\n        return (\n            <Dependency \n                className={className}\n                services={services}\n                functions={functions}\n                parameters={parameters}\n                serviceConfig={serviceConfig}\n            />\n        )\n    }\n\n    async componentDidMount() {\n        const {key} = this.params;\n\n        const results = await fetch(`/api/dependency-injection/${key}`);\n        const {className, services, functions, parameters, serviceConfig} = await results.json();\n        \n        this.setState({className, services, functions, parameters, serviceConfig});\n    }\n}\n","import React from 'react';\nimport {controllers} from 'tramway-router-react-strategy';\nimport {Routing} from '../components/pages';\nconst {ReactController} = controllers;\n\nexport default class RoutingController extends ReactController {\n    state = {};\n    \n    render() {\n        const {routes, baseUrl} = this.state;\n\n        return <Routing routes={routes} baseUrl={baseUrl}/>\n    }\n\n    async componentDidMount() {\n        try {\n            await this.getRouting();\n            await this.getBaseUrl();\n        } catch(e) {\n            \n        }\n    }\n\n    async getRouting() {\n        const results = await fetch('/api/routing');\n        const {routes} = await results.json();\n        \n        this.setState({routes});\n    }\n\n    async getBaseUrl() {\n        const results = await fetch('/api/state');\n        const {parameters} = await results.json();\n        let {port, PORT} = parameters;\n\n        if (!port) {\n            port = PORT;\n        }\n        \n        this.setState({baseUrl: `http://localhost:${port}`});\n    }\n}\n","import React from 'react';\nimport {controllers} from 'tramway-router-react-strategy';\nimport {Parameters} from '../components/pages';\nconst {ReactController} = controllers;\n\nexport default class ParametersController extends ReactController {\n    state = {};\n\n    async handleStateChange(state) {\n        if (state === this.state.state) {\n            return;\n        }\n\n        setTimeout(async () => await this.getDependencyInjection(), 3000)\n    }\n    \n    render() {\n        const {parameters} = this.state;\n\n        return (\n            <Parameters\n                parameters={parameters}\n                handleStateChange={async state => await this.handleStateChange(state)}\n            />\n        )\n    }\n\n    async componentDidMount() {\n        await this.getDependencyInjection();\n    }\n\n    async getDependencyInjection() {\n        const results = await fetch('/api/dependency-injection');\n        const {parameters} = await results.json();\n        \n        this.setState({parameters});\n    }\n}","import React from 'react';\nimport {controllers} from 'tramway-router-react-strategy';\nimport {Services} from '../components/pages';\nimport querystring from 'querystring';\nconst {ReactController} = controllers;\n\nexport default class ServicesController extends ReactController {\n    state = {};\n\n    constructor({args: [filter], ...props}) {\n        super(props);\n        this.filter = filter;\n    }\n\n    async handleStateChange(state) {\n        if (state === this.state.state) {\n            return;\n        }\n\n        setTimeout(async () => await this.getDependencyInjection(), 3000)\n    }\n    \n    render() {\n        const {services, instances} = this.state;\n\n        return (\n            <Services\n                services={services}\n                instances={instances}\n                handleStateChange={async state => await this.handleStateChange(state)}\n            />\n        )\n    }\n\n    async componentDidMount() {\n        await this.getDependencyInjection();\n    }\n\n    async getDependencyInjection() {\n        let resourcePath = '/api/dependency-injection';\n\n        if (this.filter) {\n            resourcePath = `${resourcePath}?${querystring.encode({filter: this.filter})}`;\n        }\n        \n        const results = await fetch(resourcePath);\n        const {services, instances} = await results.json();\n        \n        this.setState({services, instances});\n    }\n}","import React from 'react';\nimport {controllers} from 'tramway-router-react-strategy';\nimport {Logs} from '../components/pages';\nconst {ReactController} = controllers;\n\nexport default class LogsController extends ReactController {\n    state = {};\n    \n    render() {\n        const {logs} = this.state;\n\n        return <Logs logs={logs}/>\n    }\n\n    async componentDidMount() {\n        await this.getLogs();\n\n        setInterval(async () => await this.getLogs(), 1000);\n    }\n\n    async getLogs() {\n        const results = await fetch('/api/logs');\n        const logs = await results.json();\n        \n        this.setState({logs});\n    }\n}\n","import React from 'react';\nimport { controllers } from 'tramway-router-react-strategy';\nimport { NotFound } from '../components/pages';\nconst {NotFoundController} = controllers;\n\nexport default class PageNotFoundController extends NotFoundController {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return <NotFound/>\n    }\n}\n","import controllers from './controllers';\nimport router from './router';\n\nexport default {\n    ...controllers,\n    ...router,\n}\n","import {\n    DashboardController,\n    LibrariesController,\n    DependencyInjectionController,\n    DependencyInspectionController,\n    RoutingController,\n    ParametersController,\n    PageNotFoundController,\n    ServicesController,\n    LogsController,\n} from '../../controllers';\n\nimport {withDependencyInjection} from 'tramway-router-react-strategy';\n\nexport default {\n    \"controller.dashboard\": {\n        \"class\": withDependencyInjection(DashboardController),\n        \"constructor\": [],\n    },\n    \"controller.libraries\": {\n        \"class\": withDependencyInjection(LibrariesController),\n        \"constructor\": [],\n    },\n    \"controller.dependency-injection\": {\n        \"class\": withDependencyInjection(DependencyInjectionController),\n        \"constructor\": [],\n    },\n    \"controller.parameters\": {\n        \"class\": withDependencyInjection(ParametersController),\n        \"constructor\": [],\n    },\n    \"controller.services\": {\n        \"class\": withDependencyInjection(ServicesController),\n        \"constructor\": [\n            'service',\n        ],\n    },\n    \"controller.policies\": {\n        \"class\": withDependencyInjection(ServicesController),\n        \"constructor\": [\n            'policy',\n        ],\n    },\n    \"controller.controllers\": {\n        \"class\": withDependencyInjection(ServicesController),\n        \"constructor\": [\n            'controller',\n        ],\n    },\n    \"controller.repositories\": {\n        \"class\": withDependencyInjection(ServicesController),\n        \"constructor\": [\n            'repository',\n        ],\n    },\n    \"controller.factories\": {\n        \"class\": withDependencyInjection(ServicesController),\n        \"constructor\": [\n            'factory',\n        ],\n    },\n    \"controller.providers\": {\n        \"class\": withDependencyInjection(ServicesController),\n        \"constructor\": [\n            'provider',\n        ],\n    },\n    \"controller.dependency-inspection\": {\n        \"class\": withDependencyInjection(DependencyInspectionController),\n        \"constructor\": [],\n    },\n    \"controller.routing\": {\n        \"class\": withDependencyInjection(RoutingController),\n        \"constructor\": [],\n    },\n    \"controller.logs\": {\n        \"class\": withDependencyInjection(LogsController),\n        \"constructor\": [],\n    },\n    \"controller.not_found\": {\n        \"class\": withDependencyInjection(PageNotFoundController),\n        \"constructor\": [\n\n        ],\n    },\n}\n","import {Router} from 'tramway-core-router';\nimport ReactRouterStrategy from 'tramway-router-react-strategy';\nimport {app} from '../../App';\n\nexport default {\n    \"router\": {\n        \"class\": Router,\n        \"constructor\": [\n            {\"type\": \"parameter\", \"key\": \"routes\"},\n            {\"type\": \"service\", \"key\": \"react-router-strategy\"},\n            app('dashboard').getDependencyResolver(),\n        ],\n    },\n    \"react-router-strategy\": {\n        \"class\": ReactRouterStrategy,\n        \"constructor\": [],\n        \"functions\": []\n    }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Lets check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://goo.gl/SC7cgQ'\n            );\n          });\n        } else {\n          // Is not local host. Just register service worker\n          registerValidSW(swUrl);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        if (\n          response.status === 404 ||\n          response.headers.get('content-type').indexOf('javascript') === -1\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }\n  ","import ReactDOM from 'react-dom';\nimport App from './App';\nimport * as parameters from './config/parameters';\nimport services from './config/services';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst app = App.initialize('dashboard', services, parameters);\nconst router = app.getDependencyResolver().getService('router').initialize();\n\nReactDOM.render(router, document.getElementById('root'));\nregisterServiceWorker();"],"sourceRoot":""}