{"version":3,"sources":["App.js","config/parameters/global/routes.js","components/buttons/AppToggle/AppToggle.js","components/buttons/AppToggle/index.js","components/layout/Menu/index.js","components/layout/Menu/Menu.js","components/layout/Page/index.js","components/layout/Page/Page.js","components/pages/Dashboard/index.js","components/pages/Dashboard/Dashboard.js","components/lists/InstalledLibraries/index.js","components/lists/InstalledLibraries/InstalledLibraries.js","components/lists/Routes/index.js","components/lists/Routes/Routes.js","components/items/JSONFormatter/index.js","components/items/JSONFormatter/JSONFormatter.js","components/lists/DependenciesList/index.js","components/lists/DependenciesList/DependenciesList.js","components/lists/ParametersList/index.js","components/lists/ParametersList/ParametersList.js","components/lists/FunctionsList/index.js","components/lists/FunctionsList/FunctionsList.js","components/pages/Libraries/Libraries.js","components/pages/Libraries/index.js","components/pages/Routing/index.js","components/pages/Routing/Routing.js","components/pages/Dependencies/index.js","components/pages/Dependencies/Dependencies.js","components/pages/Dependency/index.js","components/pages/Dependency/Dependency.js","components/pages/NotFound/index.js","components/pages/NotFound/NotFound.js","controllers/DashboardController.js","controllers/LibrariesController.js","controllers/DependencyInjectionController.js","controllers/DependencyInspectionController.js","controllers/RoutingController.js","controllers/PageNotFoundController.js","config/services/index.js","config/services/controllers.js","config/services/router.js","registerServiceWorker.js","index.js"],"names":["manager","Map","App","name","this","instance","get","set","services","parameters","di","createDependencyResolver","initialize","getService","start","routesValues","AppToggle","state","status","error","loading","Error","setState","fetch","method","body","JSON","stringify","headers","ok","handleChange","props","Button","icon","getIcon","onClick","a","handleToggle","Component","defaultProps","Menu","handleStateChange","inverted","fixed","Header","Item","link","href","position","as","Page","Container","style","marginTop","children","Dashboard","message","console","log","InstalledLibraries","libraries","updates","Object","entries","map","library","version","Table","Row","key","Cell","celled","striped","HeaderCell","Body","prepareRows","Routes","routes","values","i","controller","action","path","methods","policy","className","JSONFormatter","value","data","e","constructor","toString","DependenciesList","dependencies","instances","items","length","classDefinition","includes","Icon","color","aria-label","class","prepareConstructorArgs","prepareFunctionsArgs","item","type","Label","size","Function","functions","ParametersList","Segment","placeholder","padded","FunctionsList","functionName","function","args","arg","Libraries","target","included","fromEntries","filter","hasTarget","prevProps","prevState","devDependencies","Grid","columns","divided","Column","basic","vertical","Routing","file","Dependencies","Dependency","serviceConfig","NotFound","PureComponent","DashboardController","controllers","ReactController","LibrariesController","results","json","DependencyInjectionController","setTimeout","getDependencyInjection","DependencyInspectionController","params","RoutingController","PageNotFoundController","NotFoundController","withDependencyInjection","Router","app","getDependencyResolver","ReactRouterStrategy","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","catch","router","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","response","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f12e9e92.chunk.js","sourcesContent":["import {createDependencyResolver} from '@tramwayjs/dependency-injector';\n\nvar manager = new Map();\n\nexport default class App {\n    constructor(name) {\n        this.name = name;\n        const instance = manager.get(name);\n\n        if (instance) {\n            return instance;\n        }\n\n        manager.set(name, this);\n    }\n\n    static initialize(name, services, parameters) {\n        return new App(name).initialize(services, parameters);\n    }\n    \n    initialize(services, parameters) {\n        this.di = createDependencyResolver(this.name).initialize(services, parameters);\n        return this;\n    }\n\n    start() {\n        let app = this.di.getService('app');\n        return app.initialize().start();\n    }\n\n    getDependencyResolver() {\n        return this.di || createDependencyResolver(this.name);\n    }\n}\n\nexport function app(name) {\n    const instance = manager.get(name);\n\n    if (instance) {\n        return instance;\n    }\n\n    return new App(name);\n}","const routesValues = [\n    {\n        \"methods\": [\"get\"],\n        \"controller\": 'controller.dashboard',\n        \"title\": \"Home\",\n    },\n    {\n        \"methods\": [\"get\"],\n        \"controller\": \"controller.libraries\",\n        \"action\": \"index\",\n        \"path\": \"libraries\",\n    },\n    {\n        \"controller\": \"controller.routing\",\n        \"methods\": [\"get\"],\n        \"path\": \"routing\",\n    },\n    {\n        \"controller\": \"controller.dependency-injection\",\n        \"methods\": [\"get\"],\n        \"path\": \"dependency-injection\",\n    },\n    {\n        \"controller\": \"controller.dependency-inspection\",\n        \"path\": \"dependency-injection/:key\",\n        \"methods\": [\"get\"],\n    },\n    {\n        \"controller\": 'controller.not_found',\n        \"methods\": [\"get\"],\n        \"path\": \"*\",\n    },\n];\n\nexport default routesValues;","import React, {Component} from 'react';\nimport { Button } from 'semantic-ui-react';\n\nexport default class AppToggle extends Component {\n    state = {\n        status: 'stopped',\n        error: false,\n        loading: false,\n    }\n\n    static defaultProps = {\n        handleChange: status => status,\n    }\n\n    static getIcon(status) {\n        switch(status) {\n            case 'active': return 'stop';\n            case 'stopped': return 'play';\n        }\n    }\n\n    async handleToggle(status) {\n        let state;\n\n        switch(status) {\n            case 'active': state = 'stopped'; break;\n            case 'stopped': state = 'active'; break;\n            default: throw new Error('Invalid status');\n        }\n\n        this.setState({loading: true})\n\n        let response = await fetch('http://localhost:8000/app', {\n            method: 'PATCH',\n            body: JSON.stringify({state}),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n\n        if (!response.ok) {\n            this.setState({error: true, loading: false})\n        }\n\n        this.setState({status: state, error: false, loading: false}, () => {\n            const {status} = this.state;\n            const {handleChange} = this.props;\n            return handleChange(status);\n        });\n    }\n\n    render() {\n        const {status, error, loading} = this.state;\n\n        return (\n            <Button icon={AppToggle.getIcon(status)} onClick={async () => await this.handleToggle(status)} error={error} loading={loading}/>\n        )\n    }\n}","import AppToggle from './AppToggle';\n\nexport default AppToggle;","import Menu from './Menu';\n\nexport default Menu;","import React, {Component} from 'react';\nimport { Menu as SemanticMenu } from \"semantic-ui-react\";\nimport { AppToggle } from '../../buttons';\n\nexport default class Menu extends Component {\n    render() {\n        const {handleStateChange} = this.props;\n\n        return (\n            <SemanticMenu inverted fixed=\"top\">\n                <SemanticMenu.Header>\n                    <SemanticMenu.Item icon=\"home\" link href=\"/\"/>\n                </SemanticMenu.Header>\n                <SemanticMenu.Item name=\"Libraries\" link href=\"/libraries\"/>\n                <SemanticMenu.Item name=\"Routing\" link href=\"/routing\"/>\n                <SemanticMenu.Item name=\"Dependency Injection\" link href=\"/dependency-injection\"/>\n                <SemanticMenu.Item name=\"Architecture\" link href=\"/architecture\"/>\n                <SemanticMenu.Menu position=\"right\">\n                    <SemanticMenu.Item as={AppToggle} handleChange={handleStateChange}/>\n                </SemanticMenu.Menu>\n            </SemanticMenu>\n        )\n    }\n}","import Page from './Page';\n\nexport default Page;","import React, {Component} from 'react';\nimport Menu from \"../Menu\";\nimport { Container } from \"semantic-ui-react\";\n\nexport default class Page extends Component {\n    render() {\n        const {handleStateChange} = this.props;\n        \n        return (\n            <div>\n                <Menu handleStateChange={handleStateChange}/>\n                <Container style={{marginTop: 50}}>\n                    {this.props.children}\n                </Container>\n            </div>\n        );\n    }\n}","import Dashboard from './Dashboard';\n\nexport default Dashboard;","import { Page } from '../../layout';\nimport React, {Component} from 'react';\nimport { Button } from 'semantic-ui-react';\n\nexport default class Dashboard extends Component {\n    render() {\n        const {message} = this.props;\n        \n        return (\n            <Page>\n                <p>This is the React component: {message}</p>\n\n                <Button onClick={() => console.log('weeeee')}>Weee</Button>\n            </Page>\n        )\n    }\n}","import InstalledLibraries from './InstalledLibraries';\n\nexport default InstalledLibraries;","import React, {Component} from 'react';\nimport { Table } from \"semantic-ui-react\";\n\nexport default class InstalledLibraries extends Component {\n    prepareRows() {\n        const {libraries, updates} = this.props;\n\n        return Object.entries(libraries).map(([library, version]) => (\n            <Table.Row key={library}>\n                <Table.Cell>{library}</Table.Cell>\n                <Table.Cell>{version}</Table.Cell>\n                <Table.Cell>{updates[library]}</Table.Cell>\n                <Table.Cell><button>Update</button></Table.Cell>\n            </Table.Row>\n        ))\n    }\n\n    render() {\n        return (\n            <Table celled striped>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Module</Table.HeaderCell>\n                        <Table.HeaderCell>Version</Table.HeaderCell>\n                        <Table.HeaderCell>Latest Version</Table.HeaderCell>\n                        <Table.HeaderCell></Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {this.prepareRows()}\n                </Table.Body>\n            </Table>\n        )\n    }\n}","import Routes from './Routes';\n\nexport default Routes;","import React, {Component} from 'react';\nimport { Table } from \"semantic-ui-react\";\n\nexport default class Routes extends Component {\n    prepareRows() {\n        const {routes = []} = this.props;\n\n        return Object.values(routes).map(({controller, action, path = '', methods, policy = 'None'}, i) => (\n            <Table.Row key={i}>\n                <Table.Cell>{`/${path}`}</Table.Cell>\n                <Table.Cell className=\"uppercase\">{methods}</Table.Cell>\n                <Table.Cell><a href={`/dependency-injection/${controller}`}>{controller}</a></Table.Cell>\n                <Table.Cell>{action}</Table.Cell>\n                <Table.Cell>{policy}</Table.Cell>\n            </Table.Row>\n        ))\n    }\n\n    render() {\n        return (\n            <Table celled striped>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Path</Table.HeaderCell>\n                        <Table.HeaderCell>HTTP Method</Table.HeaderCell>\n                        <Table.HeaderCell>Controller</Table.HeaderCell>\n                        <Table.HeaderCell>Action</Table.HeaderCell>\n                        <Table.HeaderCell>Policy</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {this.prepareRows()}\n                </Table.Body>\n            </Table>\n        )\n    }\n}","import JSONFormatter from './JSONFormatter';\n\nexport default JSONFormatter;","import React, {Component} from 'react';\n\nexport default class JSONFormatter extends Component {\n    render() {\n        const {data} = this.props;\n        let value;\n\n        try {\n            value = JSON.stringify(data, null, 2)\n        } catch(e) {\n            if (data.constructor) {\n                value = data.constructor.name;\n            } else {\n                value = data.toString();\n            }\n        }\n\n        return (\n            <div>\n                <pre>{value}</pre>\n            </div>\n        )\n    }\n}","import DependenciesList from './DependenciesList';\n\nexport default DependenciesList;","import React, {Component} from 'react';\nimport { Table, Icon, Label } from \"semantic-ui-react\";\nimport { JSONFormatter } from \"../../items\";\n\nexport default class DependenciesList extends Component {\n    prepareRows() {\n        const {dependencies = {}, instances = []} = this.props;\n        const items = Object.entries(dependencies);\n\n        if (!items.length) {\n            return (\n                <Table.Row>\n                    <Table.Cell>No dependencies found</Table.Cell>\n                </Table.Row>\n            );\n        }\n\n        return items.map(([key, classDefinition]) => (\n            <Table.Row key={key}>\n                <Table.Cell>\n                    {instances.includes(key) && <Icon color=\"green\" name=\"check circle\" aria-label=\"The instance has been created and the service is being used\" link/>}\n                </Table.Cell>\n                <Table.Cell><a href={`/dependency-injection/${key}`}>{key}</a></Table.Cell>\n                <Table.Cell>{classDefinition.class}</Table.Cell>\n                <Table.Cell><ol>{this.prepareConstructorArgs(classDefinition)}</ol></Table.Cell>\n                <Table.Cell>{this.prepareFunctionsArgs(classDefinition)}</Table.Cell>\n            </Table.Row>\n        ))\n    }\n\n    prepareConstructorArgs(classDefinition) {\n        const constructorArgs = classDefinition.constructor;\n\n        return constructorArgs.map(item => {\n            const {type, key} = item;\n\n            if (type && key) {\n                return <li><a href={`/dependency-injection/${key}`}>{key} <Label size=\"tiny\">{type}</Label></a></li>\n            }\n\n            if (item instanceof Function) {\n                return <li>{item.name}()</li>\n            }\n\n            try {\n                return <li><JSONFormatter data={item}/></li>\n            } catch(e) {\n                if (item instanceof Object) {\n                    return <li>{item.constructor.name}</li>\n                }\n            }\n\n            return <li>{item.toString()}</li>\n        })\n    }\n    \n    prepareFunctionsArgs(classDefinition) {\n        return classDefinition.functions ? classDefinition.functions.length : 0\n    }\n\n    render() {\n        return (\n            <Table celled striped>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell></Table.HeaderCell>\n                        <Table.HeaderCell>Key</Table.HeaderCell>\n                        <Table.HeaderCell>Class</Table.HeaderCell>\n                        <Table.HeaderCell>Constructor</Table.HeaderCell>\n                        <Table.HeaderCell>Function Calls</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {this.prepareRows()}\n                </Table.Body>\n            </Table>\n        )\n    }\n}","import ParametersList from './ParametersList';\n\nexport default ParametersList;","import React, {Component} from 'react';\nimport { Table, Segment } from \"semantic-ui-react\";\nimport { JSONFormatter } from \"../../items\";\n\nexport default class ParametersList extends Component {\n    prepareRows() {\n        const {parameters = {}} = this.props;\n        const items = parameters ? Object.entries(parameters) : [];\n\n        if (!items.length) {\n            return (\n                <Table.Row>\n                    <Table.Cell>No parameters found</Table.Cell>\n                </Table.Row>\n            );\n        }\n\n        return items.map(([key, value]) => {\n            if (value instanceof Function) {\n                value = `${value.name}()`;\n            } \n            \n            if (value instanceof Object) {\n                value = <Segment placeholder size=\"small\" padded={false}><JSONFormatter data={value}/></Segment>\n            }\n\n            return (\n                <Table.Row key={key}>\n                    <Table.Cell>{key}</Table.Cell>\n                    <Table.Cell>{value}</Table.Cell>\n                </Table.Row>\n            )\n        })\n    }\n\n    render() {\n        return (\n            <Table celled striped>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Key</Table.HeaderCell>\n                        <Table.HeaderCell>Value</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {this.prepareRows()}\n                </Table.Body>\n            </Table>\n        )\n    }\n}","import FunctionsList from './FunctionsList';\n\nexport default FunctionsList;","import React, {Component} from 'react';\nimport { Table } from \"semantic-ui-react\";\n\nexport default class FunctionsList extends Component {\n    prepareRows() {\n        const {functions = []} = this.props;\n\n        if (!functions.length) {\n            return (\n                <Table.Row>\n                    <Table.Cell>No functions found</Table.Cell>\n                </Table.Row>\n            );\n        }\n\n        return functions.map(({function: functionName, args = []}, i) => (\n            <Table.Row key={`${functionName}${i}`}>\n                <Table.Cell>{functionName}</Table.Cell>\n                <Table.Cell>\n                    <ol>\n                        {args.map(arg => {\n                            if (arg instanceof Function) {\n                                return <li>{arg.name}</li>;\n                            }\n\n                            if (arg instanceof Object) {\n                                return <li>{arg.constructor.name}</li>\n                            }\n\n                            return <li>{arg.toString()}</li>;\n                        })}\n                    </ol>\n                </Table.Cell>\n            </Table.Row>\n        ))\n    }\n\n    render() {\n        return (\n            <Table celled striped>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Function</Table.HeaderCell>\n                        <Table.HeaderCell>Arguments</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {this.prepareRows()}\n                </Table.Body>\n            </Table>\n        )\n    }\n}","import React, {Component} from 'react';\nimport { Page } from \"../../layout\";\nimport { InstalledLibraries } from \"../../lists\";\nimport { Header, Grid, Segment } from \"semantic-ui-react\";\n\nexport default class Libraries extends Component {\n    static defaultProps = {\n        dependencies: [],\n        devDependencies: [],\n        updates: [],\n    };\n\n    state = {\n        loading: true,\n    }\n\n    filter(dependencies, target, included = true) {\n        return Object.fromEntries(\n            Object\n                .entries(dependencies)\n                .filter(\n                    ([library]) => {\n                        const hasTarget = library.includes(target);\n\n                        return (!included || hasTarget) && !(!included && hasTarget);\n                    }\n                )\n        );\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const {dependencies, devDependencies, updates} = this.props;\n\n        if (prevProps.dependencies === dependencies && prevProps.devDependencies === devDependencies && prevProps.updates === updates) {\n            return;\n        }\n\n        this.setState({loading: false})\n    }\n\n    render() {\n        const {dependencies, devDependencies, updates} = this.props;\n        const {loading} = this.state;\n        \n        return (\n            <Page>\n                <Grid columns={2} divided>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Header as='h2'>Tramway Dependencies</Header>\n                                <Segment basic vertical loading={loading}>\n                                    <InstalledLibraries libraries={this.filter(dependencies, 'tramway')} updates={this.filter(updates, 'tramway')}/>\n                                </Segment>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Header as='h2'>External Dependencies</Header>\n                            <Segment basic vertical loading={loading}>\n                                <InstalledLibraries libraries={this.filter(dependencies, 'tramway', false)} updates={this.filter(updates, 'tramway', false)}/>\n                            </Segment>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Header as='h2'>Babel Dependencies</Header>\n                            <Segment basic vertical loading={loading}>\n                                <InstalledLibraries libraries={this.filter(devDependencies, 'babel')} updates={this.filter(updates, 'babel')}/>\n                            </Segment>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Header as='h2'>Development Dependencies</Header>\n                            <Segment basic vertical loading={loading}>\n                                <InstalledLibraries libraries={this.filter(devDependencies, 'babel', false)} updates={this.filter(updates, 'babel', false)}/>\n                            </Segment>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Page>\n        )\n    }\n}","import Libraries from './Libraries';\n\nexport default Libraries;","import Routing from './Routing';\nexport default Routing;","import React, {Component} from 'react';\nimport { Page } from \"../../layout\";\nimport { Routes } from \"../../lists\";\nimport { Segment } from 'semantic-ui-react';\n\nexport default class Routing extends Component {\n    state = {\n        loading: true,\n    }\n\n    render() {\n        const {file, routes} = this.props;\n        const {loading} = this.state;\n\n        return (\n            <Page>\n                {file}\n                <Segment basic vertical loading={loading}>\n                    <Routes routes={routes}/>\n                </Segment>\n            </Page>\n        )\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const {file, routes} = this.props;\n\n        if (prevProps.file === file && prevProps.routes === routes) {\n            return;\n        }\n\n        this.setState({loading: false})\n    }\n}","import Dependencies from './Dependencies';\nexport default Dependencies;","import React, {Component} from 'react';\nimport { Page } from \"../../layout\";\nimport { DependenciesList, ParametersList } from \"../../lists\";\nimport { Header, Segment } from \"semantic-ui-react\";\n\nexport default class Dependencies extends Component {\n    state = {\n        loading: true,\n    }\n    \n    render() {\n        const {services, parameters, instances, handleStateChange} = this.props;\n        const {loading} = this.state;\n\n        return (\n            <Page handleStateChange={handleStateChange}>\n                <Header as='h2'>Parameters</Header>\n                <Segment basic vertical loading={loading}>\n                    <ParametersList parameters={parameters}/>\n                </Segment>\n\n                <Header as='h2'>Services</Header>\n                <Segment basic vertical loading={loading}>\n                    <DependenciesList dependencies={services} instances={instances}/>\n                </Segment>\n            </Page>\n        )\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const {services, parameters, instances} = this.props;\n\n        if (prevProps.services === services && prevProps.parameters === parameters && prevProps.instances === instances) {\n            return;\n        }\n\n        this.setState({loading: false})\n    }\n}","import Dependency from './Dependency';\nexport default Dependency;","import React, {Component} from 'react';\nimport { Page } from \"../../layout\";\nimport { DependenciesList, ParametersList, FunctionsList } from \"../../lists\";\nimport { Header, Segment } from \"semantic-ui-react\";\nimport { JSONFormatter } from \"../../items\";\n\nexport default class Dependency extends Component {\n    state = {\n        loading: true,\n    }\n\n    render() {\n        const {className, services, parameters, functions, serviceConfig} = this.props;\n        const {loading} = this.state;\n\n        return (\n            <Page>\n                <Header as=\"h2\">{className}</Header>\n                <Header as=\"h3\">Dependencies</Header>\n                <Segment basic vertical loading={loading}>\n                    <DependenciesList dependencies={services}/>\n                </Segment>\n\n                <Header as=\"h3\">Parameters</Header>\n                <Segment basic vertical loading={loading}>\n                    <ParametersList parameters={parameters}/>\n                </Segment>\n\n                <Header as=\"h3\">Function Calls</Header>\n                <Segment basic vertical loading={loading}>\n                    <FunctionsList functions={functions}/>\n                </Segment>\n\n                <Header as=\"h3\">Declaration</Header>\n                <Segment placeholder loading={loading}>\n                    <JSONFormatter data={serviceConfig}/>\n                </Segment>\n            </Page>\n        )\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const {className, services, parameters, functions, serviceConfig} = this.props;\n\n        if (prevProps.className === className && prevProps.services === services && prevProps.parameters === parameters && prevProps.functions === functions && prevProps.serviceConfig === serviceConfig) {\n            return;\n        }\n\n        this.setState({loading: false})\n    }\n}","import NotFound from './NotFound';\n\nexport default NotFound;","import React, { PureComponent } from 'react';\nimport { Page } from \"../../layout\";\n\nexport default class NotFound extends PureComponent {\n    render() {\n        return (\n            <Page>\n                The route you're looking for could not be found.\n            </Page>\n        );\n    }\n}\n","import React from 'react';\nimport {controllers} from 'tramway-router-react-strategy';\nimport {Dashboard} from '../components/pages';\nconst {ReactController} = controllers;\n\nexport default class DashboardController extends ReactController {    \n    render() {\n        return <Dashboard message=\"React\"/>\n    }\n}\n","import React from 'react';\nimport {controllers} from 'tramway-router-react-strategy';\nimport {Libraries} from '../components/pages';\nconst {ReactController} = controllers;\n\nexport default class LibrariesController extends ReactController {\n    state = {};\n    \n    render() {\n        const {dependencies, devDependencies, updates} = this.state;\n\n        return <Libraries dependencies={dependencies} devDependencies={devDependencies} updates={updates}/>\n    }\n\n    async componentDidMount() {\n        const results = await fetch('/api/libraries');\n        const {dependencies, devDependencies, updates} = await results.json();\n        \n        this.setState({dependencies, devDependencies, updates});\n    }\n}\n","import React from 'react';\nimport {controllers} from 'tramway-router-react-strategy';\nimport {Dependencies} from '../components/pages';\nconst {ReactController} = controllers;\n\nexport default class DependencyInjectionController extends ReactController {\n    state = {};\n\n    async handleStateChange(state) {\n        if (state === this.state.state) {\n            return;\n        }\n\n        setTimeout(async () => await this.getDependencyInjection(), 3000)\n    }\n    \n    render() {\n        const {services, parameters, instances} = this.state;\n\n        return (\n            <Dependencies\n                services={services}\n                parameters={parameters}\n                instances={instances}\n                handleStateChange={async state => await this.handleStateChange(state)}\n            />\n        )\n    }\n\n    async componentDidMount() {\n        await this.getDependencyInjection();\n    }\n\n    async getDependencyInjection() {\n        const results = await fetch('/api/dependency-injection');\n        const {services, parameters, instances} = await results.json();\n        \n        this.setState({services, parameters, instances});\n    }\n}","import React from 'react';\nimport {controllers} from 'tramway-router-react-strategy';\nimport {Dependency} from '../components/pages';\nconst {ReactController} = controllers;\n\nexport default class DependencyInspectionController extends ReactController {\n    state = {};\n    \n    render() {\n        const {className, services, functions, parameters, serviceConfig} = this.state;\n\n        return (\n            <Dependency \n                className={className}\n                services={services}\n                functions={functions}\n                parameters={parameters}\n                serviceConfig={serviceConfig}\n            />\n        )\n    }\n\n    async componentDidMount() {\n        const {key} = this.params;\n\n        const results = await fetch(`/api/dependency-injection/${key}`);\n        const {className, services, functions, parameters, serviceConfig} = await results.json();\n        \n        this.setState({className, services, functions, parameters, serviceConfig});\n    }\n}\n","import React from 'react';\nimport {controllers} from 'tramway-router-react-strategy';\nimport {Routing} from '../components/pages';\nconst {ReactController} = controllers;\n\nexport default class RoutingController extends ReactController {\n    state = {};\n    \n    render() {\n        const {routes} = this.state;\n\n        return <Routing routes={routes}/>\n    }\n\n    async componentDidMount() {\n        const results = await fetch('/api/routing');\n        const {routes} = await results.json();\n        \n        this.setState({routes});\n    }\n}\n","import React from 'react';\nimport { controllers } from 'tramway-router-react-strategy';\nimport { NotFound } from '../components/pages';\nconst {NotFoundController} = controllers;\n\nexport default class PageNotFoundController extends NotFoundController {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return <NotFound/>\n    }\n}\n","import controllers from './controllers';\nimport router from './router';\n\nexport default {\n    ...controllers,\n    ...router,\n}\n","import {\n    DashboardController,\n    LibrariesController,\n    DependencyInjectionController,\n    DependencyInspectionController,\n    RoutingController,\n    PageNotFoundController,\n} from '../../controllers';\n\nimport {withDependencyInjection} from 'tramway-router-react-strategy';\n\nexport default {\n    \"controller.dashboard\": {\n        \"class\": withDependencyInjection(DashboardController),\n        \"constructor\": [],\n    },\n    \"controller.libraries\": {\n        \"class\": withDependencyInjection(LibrariesController),\n        \"constructor\": [],\n    },\n    \"controller.dependency-injection\": {\n        \"class\": withDependencyInjection(DependencyInjectionController),\n        \"constructor\": [],\n    },\n    \"controller.dependency-inspection\": {\n        \"class\": withDependencyInjection(DependencyInspectionController),\n        \"constructor\": [],\n    },\n    \"controller.routing\": {\n        \"class\": withDependencyInjection(RoutingController),\n        \"constructor\": [],\n    },\n    \"controller.not_found\": {\n        \"class\": withDependencyInjection(PageNotFoundController),\n        \"constructor\": [\n\n        ],\n    },\n}\n","import {Router} from 'tramway-core-router';\nimport ReactRouterStrategy from 'tramway-router-react-strategy';\nimport {app} from '../../App';\n\nexport default {\n    \"router\": {\n        \"class\": Router,\n        \"constructor\": [\n            {\"type\": \"parameter\", \"key\": \"routes\"},\n            {\"type\": \"service\", \"key\": \"react-router-strategy\"},\n            app('dashboard').getDependencyResolver(),\n        ],\n    },\n    \"react-router-strategy\": {\n        \"class\": ReactRouterStrategy,\n        \"constructor\": [],\n        \"functions\": []\n    }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Lets check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://goo.gl/SC7cgQ'\n            );\n          });\n        } else {\n          // Is not local host. Just register service worker\n          registerValidSW(swUrl);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        if (\n          response.status === 404 ||\n          response.headers.get('content-type').indexOf('javascript') === -1\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }\n  ","import ReactDOM from 'react-dom';\nimport App from './App';\nimport * as parameters from './config/parameters';\nimport services from './config/services';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst app = App.initialize('dashboard', services, parameters);\nconst router = app.getDependencyResolver().getService('router').initialize();\n\nReactDOM.render(router, document.getElementById('root'));\nregisterServiceWorker();"],"sourceRoot":""}